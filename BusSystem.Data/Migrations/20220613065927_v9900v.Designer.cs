// <auto-generated />
using System;
using BusSystem.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusSystem.Data.Migrations
{
    [DbContext(typeof(BusSystemDbContext))]
    [Migration("20220613065927_v9900v")]
    partial class v9900v
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusSystem.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<decimal>("PriceTicket")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimeScheduleId");

                    b.ToTable("BusSchedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1997 Wisoky Village, West Robynmouth, Lebanon",
                            Birthday = new DateTime(1950, 1, 10, 13, 31, 12, 128, DateTimeKind.Utc).AddTicks(7936),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Nora_Marks@hotmail.com",
                            FullName = "Delbert Raynor",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "915-750-7230"
                        },
                        new
                        {
                            Id = 2,
                            Address = "74240 Ernestina Centers, North Otiliaville, France",
                            Birthday = new DateTime(1970, 1, 5, 21, 15, 28, 990, DateTimeKind.Utc).AddTicks(547),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Baylee89@hotmail.com",
                            FullName = "Audrey Crona",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "553-704-9475"
                        },
                        new
                        {
                            Id = 3,
                            Address = "70133 Cynthia Pass, Marvinland, Seychelles",
                            Birthday = new DateTime(1985, 1, 24, 19, 31, 3, 513, DateTimeKind.Utc).AddTicks(907),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Breanne94@hotmail.com",
                            FullName = "Norbert Berge",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "944-479-9257"
                        },
                        new
                        {
                            Id = 4,
                            Address = "33300 Dare Turnpike, Allisonfort, Vietnam",
                            Birthday = new DateTime(1989, 3, 7, 21, 17, 2, 115, DateTimeKind.Utc).AddTicks(6859),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Bryce40@gmail.com",
                            FullName = "Nicholas Kohler",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "419-859-4677"
                        },
                        new
                        {
                            Id = 5,
                            Address = "1879 Barrett Extensions, Swaniawskiside, Saint Barthelemy",
                            Birthday = new DateTime(1981, 6, 21, 19, 54, 26, 291, DateTimeKind.Utc).AddTicks(7324),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Nikki.Rath33@yahoo.com",
                            FullName = "Llewellyn McDermott",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "515-486-5987"
                        },
                        new
                        {
                            Id = 6,
                            Address = "109 Ephraim Station, South Jamison, Grenada",
                            Birthday = new DateTime(1947, 10, 5, 14, 2, 6, 503, DateTimeKind.Utc).AddTicks(6130),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Celine73@gmail.com",
                            FullName = "Kamren Heathcote",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "952-212-3525"
                        },
                        new
                        {
                            Id = 7,
                            Address = "89395 Julius Neck, Burniceshire, Ukraine",
                            Birthday = new DateTime(1951, 11, 1, 2, 27, 39, 685, DateTimeKind.Utc).AddTicks(3255),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Macey.Pollich@hotmail.com",
                            FullName = "Katelynn Swaniawski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "784-370-8102"
                        },
                        new
                        {
                            Id = 8,
                            Address = "4632 Grant Via, Schadenborough, Luxembourg",
                            Birthday = new DateTime(1977, 10, 9, 11, 38, 28, 471, DateTimeKind.Utc).AddTicks(5977),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Chelsea_Hudson@gmail.com",
                            FullName = "Trent McClure",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "611-273-9749"
                        },
                        new
                        {
                            Id = 9,
                            Address = "3582 Maximillian Mill, East Carolinachester, Guam",
                            Birthday = new DateTime(1973, 9, 6, 5, 38, 5, 306, DateTimeKind.Utc).AddTicks(5821),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Eloy_Runte@hotmail.com",
                            FullName = "Patrick Halvorson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "645-432-8996"
                        },
                        new
                        {
                            Id = 10,
                            Address = "7887 Mitchel Mills, Marielleport, Sweden",
                            Birthday = new DateTime(1945, 5, 3, 23, 3, 3, 497, DateTimeKind.Utc).AddTicks(2856),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Hermann46@yahoo.com",
                            FullName = "Ciara Hoeger",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "707-432-4324"
                        },
                        new
                        {
                            Id = 11,
                            Address = "274 Quitzon Court, Veldamouth, Virgin Islands, British",
                            Birthday = new DateTime(1947, 12, 6, 1, 16, 7, 602, DateTimeKind.Utc).AddTicks(1917),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Tiana83@yahoo.com",
                            FullName = "Llewellyn Wiegand",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "581-340-4875"
                        },
                        new
                        {
                            Id = 12,
                            Address = "6023 Lucy Club, North Lydaside, Rwanda",
                            Birthday = new DateTime(1970, 2, 10, 16, 4, 59, 466, DateTimeKind.Utc).AddTicks(9176),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Roman72@gmail.com",
                            FullName = "Ansel Heidenreich",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "204-504-3722"
                        },
                        new
                        {
                            Id = 13,
                            Address = "25260 Etha Squares, East Brayan, Denmark",
                            Birthday = new DateTime(1988, 3, 25, 18, 12, 23, 708, DateTimeKind.Utc).AddTicks(9001),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Jammie98@hotmail.com",
                            FullName = "Keanu Gottlieb",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "322-446-5623"
                        },
                        new
                        {
                            Id = 14,
                            Address = "225 Marshall Junctions, Port Barretttown, Timor-Leste",
                            Birthday = new DateTime(1960, 1, 15, 20, 32, 44, 935, DateTimeKind.Utc).AddTicks(6031),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Robyn.Cormier@yahoo.com",
                            FullName = "Abdul Blick",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "950-499-1917"
                        },
                        new
                        {
                            Id = 15,
                            Address = "95321 Margarett Junction, Lake Dashawn, Ecuador",
                            Birthday = new DateTime(1991, 4, 25, 4, 23, 49, 313, DateTimeKind.Utc).AddTicks(2548),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Marie_Hegmann66@yahoo.com",
                            FullName = "Stefanie Barrows",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "280-263-7231"
                        },
                        new
                        {
                            Id = 16,
                            Address = "995 Jaren Circle, North Nashfort, Rwanda",
                            Birthday = new DateTime(1955, 8, 5, 6, 25, 38, 286, DateTimeKind.Utc).AddTicks(6742),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Muhammad75@hotmail.com",
                            FullName = "Raul Gerhold",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "931-595-6668"
                        },
                        new
                        {
                            Id = 17,
                            Address = "2863 Goodwin Keys, Wiegandbury, Belgium",
                            Birthday = new DateTime(1981, 12, 31, 22, 37, 31, 645, DateTimeKind.Utc).AddTicks(7484),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Edythe.Thompson@gmail.com",
                            FullName = "Bell Vandervort",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "538-285-7084"
                        },
                        new
                        {
                            Id = 18,
                            Address = "15359 Myrtie Dam, Garrisonland, Italy",
                            Birthday = new DateTime(1947, 8, 23, 21, 26, 23, 527, DateTimeKind.Utc).AddTicks(2171),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Karlee_McDermott@gmail.com",
                            FullName = "Donnie Goyette",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "268-868-7661"
                        },
                        new
                        {
                            Id = 19,
                            Address = "6813 Ed Vista, South Katarinaview, Afghanistan",
                            Birthday = new DateTime(1964, 2, 17, 6, 0, 5, 648, DateTimeKind.Utc).AddTicks(6781),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Lyda.OKon@yahoo.com",
                            FullName = "Xavier Denesik",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "228-552-1348"
                        },
                        new
                        {
                            Id = 20,
                            Address = "6097 Leann Fall, South Sammiebury, Belgium",
                            Birthday = new DateTime(1981, 12, 23, 4, 32, 34, 154, DateTimeKind.Utc).AddTicks(2427),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Caitlyn2@yahoo.com",
                            FullName = "Mara Jacobson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "616-733-7655"
                        },
                        new
                        {
                            Id = 21,
                            Address = "02956 Anderson Run, Ronaldoshire, Grenada",
                            Birthday = new DateTime(1974, 4, 14, 23, 24, 50, 126, DateTimeKind.Utc).AddTicks(4070),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Taryn20@yahoo.com",
                            FullName = "Madison Kshlerin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "882-736-2884"
                        },
                        new
                        {
                            Id = 22,
                            Address = "380 Eleazar Mall, North Jairoside, Bulgaria",
                            Birthday = new DateTime(1988, 3, 1, 12, 13, 36, 708, DateTimeKind.Utc).AddTicks(7723),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Zoila_Steuber@yahoo.com",
                            FullName = "Gina DuBuque",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "246-482-3618"
                        },
                        new
                        {
                            Id = 23,
                            Address = "02956 Domenic Wells, East Oswaldville, Timor-Leste",
                            Birthday = new DateTime(1997, 12, 14, 1, 11, 9, 979, DateTimeKind.Utc).AddTicks(7175),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Vaughn_Gerlach64@gmail.com",
                            FullName = "Gisselle Bradtke",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "413-940-1672"
                        },
                        new
                        {
                            Id = 24,
                            Address = "964 Abernathy Prairie, West Cyrilburgh, Taiwan",
                            Birthday = new DateTime(1961, 3, 10, 1, 7, 42, 547, DateTimeKind.Utc).AddTicks(8159),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Devin55@yahoo.com",
                            FullName = "Lorena West",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "558-641-6518"
                        },
                        new
                        {
                            Id = 25,
                            Address = "3022 Swift Extension, North Hershel, Uzbekistan",
                            Birthday = new DateTime(1964, 12, 25, 3, 5, 28, 366, DateTimeKind.Utc).AddTicks(6216),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Janelle_Rath5@hotmail.com",
                            FullName = "Savanah Stoltenberg",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "623-778-2804"
                        },
                        new
                        {
                            Id = 26,
                            Address = "8195 Monica Burgs, Gottliebton, Kenya",
                            Birthday = new DateTime(1998, 12, 29, 11, 50, 14, 20, DateTimeKind.Utc).AddTicks(3328),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Renee86@hotmail.com",
                            FullName = "Jennie Mann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "582-213-4030"
                        },
                        new
                        {
                            Id = 27,
                            Address = "214 Boehm Knolls, Lehnerside, Lao People's Democratic Republic",
                            Birthday = new DateTime(1962, 8, 10, 4, 59, 44, 545, DateTimeKind.Utc).AddTicks(6255),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Cassandre_Volkman47@yahoo.com",
                            FullName = "Cleve Grant",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "650-855-2245"
                        },
                        new
                        {
                            Id = 28,
                            Address = "9055 Jaskolski Field, Lake Abdulside, Belize",
                            Birthday = new DateTime(1984, 4, 1, 13, 51, 29, 838, DateTimeKind.Utc).AddTicks(5301),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Maverick.Cormier@yahoo.com",
                            FullName = "Nigel Sawayn",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "564-638-9510"
                        },
                        new
                        {
                            Id = 29,
                            Address = "090 Benedict Corners, Gardnerside, Honduras",
                            Birthday = new DateTime(2000, 10, 29, 7, 56, 23, 654, DateTimeKind.Utc).AddTicks(3987),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Ashleigh68@yahoo.com",
                            FullName = "Melvina Streich",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "603-423-7103"
                        },
                        new
                        {
                            Id = 30,
                            Address = "1024 Shirley Turnpike, Clydemouth, Poland",
                            Birthday = new DateTime(1997, 6, 2, 12, 15, 45, 125, DateTimeKind.Utc).AddTicks(2720),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Delmer_Jenkins51@yahoo.com",
                            FullName = "Teresa Klein",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "454-587-4639"
                        },
                        new
                        {
                            Id = 31,
                            Address = "16849 Kirlin Valleys, Port Angusport, Nigeria",
                            Birthday = new DateTime(1993, 12, 16, 7, 21, 38, 285, DateTimeKind.Utc).AddTicks(5211),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Jerel65@hotmail.com",
                            FullName = "Velva MacGyver",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "599-200-1738"
                        },
                        new
                        {
                            Id = 32,
                            Address = "3218 Boyd Estate, West Delilahfurt, Holy See (Vatican City State)",
                            Birthday = new DateTime(1982, 5, 25, 11, 8, 58, 283, DateTimeKind.Utc).AddTicks(2390),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Dwight.Zulauf67@gmail.com",
                            FullName = "Joe Ratke",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "910-749-1410"
                        },
                        new
                        {
                            Id = 33,
                            Address = "5141 Celestine Cape, Hagenesfurt, Palau",
                            Birthday = new DateTime(1984, 3, 2, 19, 36, 47, 267, DateTimeKind.Utc).AddTicks(7380),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Margarita.Baumbach@yahoo.com",
                            FullName = "Audie Predovic",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "907-373-0741"
                        },
                        new
                        {
                            Id = 34,
                            Address = "39247 Kris Ville, Maggioton, Heard Island and McDonald Islands",
                            Birthday = new DateTime(1975, 10, 19, 1, 40, 18, 517, DateTimeKind.Utc).AddTicks(573),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Bridgette.Gleichner@yahoo.com",
                            FullName = "Malcolm Padberg",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "704-716-2898"
                        },
                        new
                        {
                            Id = 35,
                            Address = "86312 Filomena Crescent, Greenfelderview, Kuwait",
                            Birthday = new DateTime(1966, 7, 16, 2, 56, 58, 701, DateTimeKind.Utc).AddTicks(1088),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Rosie.Ortiz@yahoo.com",
                            FullName = "Nakia Hilll",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "793-320-3200"
                        },
                        new
                        {
                            Id = 36,
                            Address = "1225 Victor Coves, West Jazminfort, Singapore",
                            Birthday = new DateTime(1944, 9, 15, 1, 39, 51, 75, DateTimeKind.Utc).AddTicks(7823),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Anita.Towne24@yahoo.com",
                            FullName = "Daron Ortiz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "621-781-0542"
                        },
                        new
                        {
                            Id = 37,
                            Address = "27425 Foster Radial, Scottieport, Moldova",
                            Birthday = new DateTime(1979, 5, 22, 20, 55, 57, 21, DateTimeKind.Utc).AddTicks(7002),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Meagan8@gmail.com",
                            FullName = "Alexander Zemlak",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "937-587-2927"
                        },
                        new
                        {
                            Id = 38,
                            Address = "2362 Kris Ville, Wildermantown, Colombia",
                            Birthday = new DateTime(1982, 6, 30, 5, 8, 56, 518, DateTimeKind.Utc).AddTicks(3858),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Elmira_Ratke21@hotmail.com",
                            FullName = "Chauncey Stamm",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "207-993-4807"
                        },
                        new
                        {
                            Id = 39,
                            Address = "914 Yundt Alley, Lockmanfort, Zambia",
                            Birthday = new DateTime(1976, 1, 13, 6, 14, 20, 9, DateTimeKind.Utc).AddTicks(1054),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Johann93@yahoo.com",
                            FullName = "Cindy Larkin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "499-473-4756"
                        },
                        new
                        {
                            Id = 40,
                            Address = "5763 Kertzmann Plaza, Schambergerbury, Iran",
                            Birthday = new DateTime(1971, 2, 11, 0, 11, 22, 65, DateTimeKind.Utc).AddTicks(4514),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Augustine_Halvorson@gmail.com",
                            FullName = "Porter Langworth",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "904-885-4925"
                        },
                        new
                        {
                            Id = 41,
                            Address = "2079 Tyrese Gateway, Griffinstad, Libyan Arab Jamahiriya",
                            Birthday = new DateTime(1974, 2, 28, 11, 12, 3, 122, DateTimeKind.Utc).AddTicks(4165),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Kattie31@yahoo.com",
                            FullName = "Courtney Jacobson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "578-975-0882"
                        },
                        new
                        {
                            Id = 42,
                            Address = "16882 Donald Springs, Simonisburgh, Haiti",
                            Birthday = new DateTime(1976, 3, 11, 12, 11, 18, 664, DateTimeKind.Utc).AddTicks(2511),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Gina_Welch96@hotmail.com",
                            FullName = "Kiley Metz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "447-775-4241"
                        },
                        new
                        {
                            Id = 43,
                            Address = "84534 Christiansen Ford, North Viviennemouth, Guernsey",
                            Birthday = new DateTime(2002, 6, 21, 22, 31, 40, 956, DateTimeKind.Utc).AddTicks(6245),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Ila_Wilkinson@gmail.com",
                            FullName = "Juston Kassulke",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "739-859-5163"
                        },
                        new
                        {
                            Id = 44,
                            Address = "11415 Tressie Stream, Littleborough, Saint Kitts and Nevis",
                            Birthday = new DateTime(1988, 8, 19, 10, 31, 17, 447, DateTimeKind.Utc).AddTicks(2789),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Hailey.Block19@gmail.com",
                            FullName = "Brooklyn Hahn",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "641-526-8847"
                        },
                        new
                        {
                            Id = 45,
                            Address = "2288 Domingo Corner, Annaton, Slovakia (Slovak Republic)",
                            Birthday = new DateTime(1968, 12, 2, 5, 46, 20, 397, DateTimeKind.Utc).AddTicks(5),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Meggie_Hettinger39@hotmail.com",
                            FullName = "Austin Becker",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "986-267-6425"
                        },
                        new
                        {
                            Id = 46,
                            Address = "9377 Dickens Turnpike, West Trinity, Iran",
                            Birthday = new DateTime(1981, 9, 14, 3, 10, 23, 333, DateTimeKind.Utc).AddTicks(7902),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Leopoldo51@yahoo.com",
                            FullName = "Noe Schulist",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "760-367-6636"
                        },
                        new
                        {
                            Id = 47,
                            Address = "068 Garfield Haven, South Oswald, Panama",
                            Birthday = new DateTime(1967, 8, 23, 5, 13, 43, 788, DateTimeKind.Utc).AddTicks(4245),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Santino39@hotmail.com",
                            FullName = "Rasheed Mayer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "210-616-9384"
                        },
                        new
                        {
                            Id = 48,
                            Address = "01005 Runte Walk, West Ariane, Cook Islands",
                            Birthday = new DateTime(1979, 10, 7, 0, 10, 48, 460, DateTimeKind.Utc).AddTicks(7080),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Jaylin.Thiel35@gmail.com",
                            FullName = "Dana Hackett",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "924-727-6392"
                        },
                        new
                        {
                            Id = 49,
                            Address = "8812 Schinner Summit, South Elsa, Samoa",
                            Birthday = new DateTime(1945, 11, 13, 22, 58, 38, 695, DateTimeKind.Utc).AddTicks(369),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Cordelia_Wolff54@hotmail.com",
                            FullName = "Charles McDermott",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "804-963-6256"
                        },
                        new
                        {
                            Id = 50,
                            Address = "260 Reynolds Row, East Ashlystad, Cote d'Ivoire",
                            Birthday = new DateTime(1949, 3, 9, 19, 9, 3, 25, DateTimeKind.Utc).AddTicks(8990),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 59, 27, 56, DateTimeKind.Utc).AddTicks(6101),
                            Email = "Elissa.Thompson@hotmail.com",
                            FullName = "Billie Harris",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "267-414-2151"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "644aab66-6f26-451b-a636-e21e92e1384b",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsDel = 0,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ3R4A99YnH2ntFMPmCwsd2m3wCJ/lL0PVBpFAdD87SQ9LbMaoYEQytBGih7/P6kJQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d060a972-7ab7-4bf1-a475-f10f8a258990",
                            Status = 0,
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("BusCheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BusCheduleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,1)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("credit");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHis");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedDate = new DateTime(2022, 6, 13, 13, 59, 27, 3, DateTimeKind.Local).AddTicks(495),
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TimeSchedule", "TimeSchedule")
                        .WithMany()
                        .HasForeignKey("TimeScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.HasOne("BusSystem.Entity.BusSchedule", "BusSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("BusCheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TransactionHis", "TransactionHis")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusSchedule");

                    b.Navigation("Customer");

                    b.Navigation("TransactionHis");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithOne("Ticket")
                        .HasForeignKey("BusSystem.Entity.Ticket", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Schedule", "Schedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany("TransactionHis")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BusSystem.Entity.Wallet", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Navigation("TransactionHis");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Navigation("TimeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
