// <auto-generated />
using System;
using BusSystem.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusSystem.Data.Migrations
{
    [DbContext(typeof(BusSystemDbContext))]
    [Migration("20220613064620_v991")]
    partial class v991
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusSystem.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<decimal>("PriceTicket")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimeScheduleId");

                    b.ToTable("BusSchedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "6267 Dietrich Square, Mullerville, Barbados",
                            Birthday = new DateTime(1946, 8, 7, 21, 16, 59, 151, DateTimeKind.Utc).AddTicks(9232),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Jaime.Ferry@hotmail.com",
                            FullName = "Spencer Bosco",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "231-897-2260"
                        },
                        new
                        {
                            Id = 2,
                            Address = "148 Sammy Wells, East Zoe, Cuba",
                            Birthday = new DateTime(1950, 7, 31, 12, 12, 19, 502, DateTimeKind.Utc).AddTicks(6536),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Graham11@gmail.com",
                            FullName = "Ottilie Kovacek",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "505-382-6474"
                        },
                        new
                        {
                            Id = 3,
                            Address = "1809 Kutch Islands, Lake Nikita, Syrian Arab Republic",
                            Birthday = new DateTime(1950, 9, 9, 13, 11, 58, 481, DateTimeKind.Utc).AddTicks(6925),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Blanca.Goyette93@hotmail.com",
                            FullName = "Keon Johnston",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "355-647-1925"
                        },
                        new
                        {
                            Id = 4,
                            Address = "382 Howe Glens, Port Cielo, Costa Rica",
                            Birthday = new DateTime(1977, 3, 13, 19, 5, 23, 18, DateTimeKind.Utc).AddTicks(9387),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Lucie_Walker@gmail.com",
                            FullName = "Jakayla Bode",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "206-911-0306"
                        },
                        new
                        {
                            Id = 5,
                            Address = "93488 Okuneva Mills, Corwinport, Greece",
                            Birthday = new DateTime(1984, 3, 29, 20, 31, 13, 403, DateTimeKind.Utc).AddTicks(3807),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Bridgette25@yahoo.com",
                            FullName = "Yasmeen Tillman",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "644-706-7339"
                        },
                        new
                        {
                            Id = 6,
                            Address = "7765 Rylee Knolls, Pourosberg, Bangladesh",
                            Birthday = new DateTime(1951, 4, 16, 21, 4, 14, 193, DateTimeKind.Utc).AddTicks(3949),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Rosemarie.Schmidt86@gmail.com",
                            FullName = "Ezequiel Franecki",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "621-783-6819"
                        },
                        new
                        {
                            Id = 7,
                            Address = "4934 Wintheiser Greens, New Mario, American Samoa",
                            Birthday = new DateTime(1990, 8, 14, 17, 15, 57, 713, DateTimeKind.Utc).AddTicks(8923),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Carmella_Kuvalis66@yahoo.com",
                            FullName = "Braden Swaniawski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "875-528-0018"
                        },
                        new
                        {
                            Id = 8,
                            Address = "153 Johns Walks, Ryleighview, Belize",
                            Birthday = new DateTime(2003, 1, 4, 19, 32, 24, 24, DateTimeKind.Utc).AddTicks(2933),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Cameron.Murazik38@yahoo.com",
                            FullName = "Jesus Lynch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "441-509-4744"
                        },
                        new
                        {
                            Id = 9,
                            Address = "501 Silas Extensions, West Devante, United States Minor Outlying Islands",
                            Birthday = new DateTime(1950, 9, 14, 3, 28, 22, 740, DateTimeKind.Utc).AddTicks(3571),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Macie_Kuhic@gmail.com",
                            FullName = "Sandy Crona",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "574-311-3765"
                        },
                        new
                        {
                            Id = 10,
                            Address = "187 Prosacco Turnpike, Boylehaven, Ethiopia",
                            Birthday = new DateTime(2002, 6, 20, 23, 33, 6, 700, DateTimeKind.Utc).AddTicks(6238),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Cali2@hotmail.com",
                            FullName = "Kirsten Klein",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "407-906-4070"
                        },
                        new
                        {
                            Id = 11,
                            Address = "4011 Treutel Flat, New Trinity, Saint Vincent and the Grenadines",
                            Birthday = new DateTime(1987, 10, 31, 12, 14, 12, 250, DateTimeKind.Utc).AddTicks(9621),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Jacinthe99@gmail.com",
                            FullName = "Kayli Kunde",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "862-563-4712"
                        },
                        new
                        {
                            Id = 12,
                            Address = "61774 Cristopher Junctions, Port Owenburgh, Botswana",
                            Birthday = new DateTime(1948, 1, 23, 2, 2, 44, 294, DateTimeKind.Utc).AddTicks(1500),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Frank.Wolf@hotmail.com",
                            FullName = "Rosie Koepp",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "202-729-4869"
                        },
                        new
                        {
                            Id = 13,
                            Address = "973 Hackett Center, Dexterview, Kazakhstan",
                            Birthday = new DateTime(1961, 5, 26, 1, 2, 54, 666, DateTimeKind.Utc).AddTicks(3383),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Forest_Green@yahoo.com",
                            FullName = "Thalia Graham",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "829-484-4917"
                        },
                        new
                        {
                            Id = 14,
                            Address = "5367 Lera Springs, East Destiney, Uzbekistan",
                            Birthday = new DateTime(1959, 11, 14, 13, 7, 46, 358, DateTimeKind.Utc).AddTicks(5830),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Kellen_Lueilwitz20@gmail.com",
                            FullName = "Loyal Waelchi",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "416-700-8381"
                        },
                        new
                        {
                            Id = 15,
                            Address = "1689 Toney Hollow, Cummingsbury, Bolivia",
                            Birthday = new DateTime(2004, 3, 28, 19, 7, 15, 461, DateTimeKind.Utc).AddTicks(4187),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Billy.Casper32@gmail.com",
                            FullName = "Patience Beier",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "353-534-5769"
                        },
                        new
                        {
                            Id = 16,
                            Address = "32417 Hettinger Oval, South Kenyonchester, Macao",
                            Birthday = new DateTime(2003, 5, 21, 5, 7, 21, 308, DateTimeKind.Utc).AddTicks(4464),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Nyasia_Fay46@hotmail.com",
                            FullName = "Olen Nitzsche",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "908-458-5919"
                        },
                        new
                        {
                            Id = 17,
                            Address = "769 Marcos Parks, West Chetton, Saint Vincent and the Grenadines",
                            Birthday = new DateTime(1964, 11, 25, 21, 55, 34, 999, DateTimeKind.Utc).AddTicks(3662),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Kiera_Roob79@hotmail.com",
                            FullName = "Antonietta Leffler",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "923-337-8391"
                        },
                        new
                        {
                            Id = 18,
                            Address = "32437 Kareem Passage, South Ari, Tunisia",
                            Birthday = new DateTime(1999, 7, 5, 2, 18, 29, 695, DateTimeKind.Utc).AddTicks(8483),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Stan23@hotmail.com",
                            FullName = "Ludie Gleason",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "365-471-3893"
                        },
                        new
                        {
                            Id = 19,
                            Address = "494 Reinger Port, Domenicport, Bulgaria",
                            Birthday = new DateTime(1948, 3, 25, 9, 59, 45, 643, DateTimeKind.Utc).AddTicks(6637),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Darrick_Klein@yahoo.com",
                            FullName = "Adelbert Bartell",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "594-901-4474"
                        },
                        new
                        {
                            Id = 20,
                            Address = "123 Fahey Street, South Valentinemouth, Malawi",
                            Birthday = new DateTime(1946, 6, 2, 17, 38, 9, 431, DateTimeKind.Utc).AddTicks(7145),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Jarod88@hotmail.com",
                            FullName = "Abner Hayes",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "898-300-3852"
                        },
                        new
                        {
                            Id = 21,
                            Address = "3780 Meda Mill, East Mellieshire, Armenia",
                            Birthday = new DateTime(1989, 6, 29, 16, 46, 28, 198, DateTimeKind.Utc).AddTicks(635),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Anibal_Herman66@hotmail.com",
                            FullName = "Carlee Oberbrunner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "605-317-1526"
                        },
                        new
                        {
                            Id = 22,
                            Address = "2182 Cathrine Forks, Nienowshire, Equatorial Guinea",
                            Birthday = new DateTime(1951, 7, 5, 15, 50, 59, 924, DateTimeKind.Utc).AddTicks(3648),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Palma.Kemmer33@hotmail.com",
                            FullName = "Angie Boehm",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "492-921-3653"
                        },
                        new
                        {
                            Id = 23,
                            Address = "7808 Liliane View, West Noemiport, Botswana",
                            Birthday = new DateTime(1984, 8, 1, 4, 16, 47, 208, DateTimeKind.Utc).AddTicks(3553),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Patricia45@gmail.com",
                            FullName = "Perry Lind",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "588-740-9195"
                        },
                        new
                        {
                            Id = 24,
                            Address = "38701 Nicolas Row, East Laurine, Colombia",
                            Birthday = new DateTime(1957, 5, 16, 1, 20, 4, 883, DateTimeKind.Utc).AddTicks(9848),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Oswald.Casper21@gmail.com",
                            FullName = "Felipa Wunsch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "447-231-9861"
                        },
                        new
                        {
                            Id = 25,
                            Address = "545 Esther Ridge, South Gage, Dominican Republic",
                            Birthday = new DateTime(1967, 11, 25, 15, 16, 50, 61, DateTimeKind.Utc).AddTicks(7235),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Ebony.Fisher79@gmail.com",
                            FullName = "Esther Pagac",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "776-303-8429"
                        },
                        new
                        {
                            Id = 26,
                            Address = "38063 Dietrich Locks, Ronaldoside, Oman",
                            Birthday = new DateTime(1990, 9, 7, 6, 59, 59, 184, DateTimeKind.Utc).AddTicks(4491),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Alyce.Stracke28@gmail.com",
                            FullName = "Sydni Hilll",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "446-703-0802"
                        },
                        new
                        {
                            Id = 27,
                            Address = "8892 Aniya Center, West Makennaside, San Marino",
                            Birthday = new DateTime(1981, 2, 5, 10, 23, 49, 758, DateTimeKind.Utc).AddTicks(9353),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Mae.Hoppe@gmail.com",
                            FullName = "Leonora Koepp",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "865-205-3072"
                        },
                        new
                        {
                            Id = 28,
                            Address = "1908 Gottlieb Crossing, North Caseyburgh, Saudi Arabia",
                            Birthday = new DateTime(1962, 4, 13, 4, 17, 39, 172, DateTimeKind.Utc).AddTicks(8664),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Vernie69@gmail.com",
                            FullName = "Julien Cole",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "969-475-9448"
                        },
                        new
                        {
                            Id = 29,
                            Address = "19533 Lowe Village, New Araceli, Republic of Korea",
                            Birthday = new DateTime(1991, 11, 10, 23, 42, 52, 288, DateTimeKind.Utc).AddTicks(3368),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Sadye84@gmail.com",
                            FullName = "Brielle Bayer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "226-878-5514"
                        },
                        new
                        {
                            Id = 30,
                            Address = "138 Bruen Cliff, New Elissastad, Tanzania",
                            Birthday = new DateTime(1949, 10, 26, 13, 25, 47, 204, DateTimeKind.Utc).AddTicks(7177),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Eden_Hettinger@hotmail.com",
                            FullName = "Krystal Wuckert",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "420-889-0705"
                        },
                        new
                        {
                            Id = 31,
                            Address = "902 Melvin Courts, Nyahberg, Spain",
                            Birthday = new DateTime(1981, 5, 30, 7, 21, 51, 900, DateTimeKind.Utc).AddTicks(7956),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Luis_Rice23@yahoo.com",
                            FullName = "Furman Howe",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "382-527-9619"
                        },
                        new
                        {
                            Id = 32,
                            Address = "4273 Granville Trace, West Tia, Mexico",
                            Birthday = new DateTime(1972, 9, 24, 6, 10, 29, 509, DateTimeKind.Utc).AddTicks(353),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Lilliana35@yahoo.com",
                            FullName = "Frederik Flatley",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "931-380-4201"
                        },
                        new
                        {
                            Id = 33,
                            Address = "1173 Wintheiser Extension, Brendanside, United Kingdom",
                            Birthday = new DateTime(1999, 6, 26, 8, 49, 20, 46, DateTimeKind.Utc).AddTicks(5124),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Marcus33@hotmail.com",
                            FullName = "Easter Welch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "564-809-4333"
                        },
                        new
                        {
                            Id = 34,
                            Address = "05251 Caterina Passage, Albertburgh, Antigua and Barbuda",
                            Birthday = new DateTime(1978, 6, 21, 3, 37, 24, 939, DateTimeKind.Utc).AddTicks(6349),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Providenci_Breitenberg75@gmail.com",
                            FullName = "Caitlyn Donnelly",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "816-994-0777"
                        },
                        new
                        {
                            Id = 35,
                            Address = "3619 Mraz Valley, Durganburgh, Mozambique",
                            Birthday = new DateTime(1996, 1, 2, 4, 15, 25, 94, DateTimeKind.Utc).AddTicks(7423),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Jay.Funk@gmail.com",
                            FullName = "Green Denesik",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "648-612-5655"
                        },
                        new
                        {
                            Id = 36,
                            Address = "56871 Smith Neck, Lake Abbie, Paraguay",
                            Birthday = new DateTime(1955, 11, 11, 2, 17, 7, 765, DateTimeKind.Utc).AddTicks(8881),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Ole.Johns@gmail.com",
                            FullName = "Karlie Sauer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "385-606-7436"
                        },
                        new
                        {
                            Id = 37,
                            Address = "34966 Cruickshank Spring, West Cathrine, Northern Mariana Islands",
                            Birthday = new DateTime(1955, 9, 21, 4, 59, 8, 13, DateTimeKind.Utc).AddTicks(6129),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Gregoria.Lesch93@yahoo.com",
                            FullName = "Alejandra Mueller",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "283-728-8815"
                        },
                        new
                        {
                            Id = 38,
                            Address = "2496 Towne Port, Kleintown, Jersey",
                            Birthday = new DateTime(1978, 11, 5, 18, 56, 47, 285, DateTimeKind.Utc).AddTicks(1244),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Samara83@yahoo.com",
                            FullName = "Aracely Cronin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "863-849-8546"
                        },
                        new
                        {
                            Id = 39,
                            Address = "8572 Fredrick Haven, East Edythe, Eritrea",
                            Birthday = new DateTime(1993, 6, 16, 8, 2, 46, 719, DateTimeKind.Utc).AddTicks(934),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Saige.Schultz@hotmail.com",
                            FullName = "Beatrice Koelpin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "662-331-9597"
                        },
                        new
                        {
                            Id = 40,
                            Address = "2000 Dorris Place, Deronmouth, Guadeloupe",
                            Birthday = new DateTime(1969, 4, 26, 12, 3, 49, 504, DateTimeKind.Utc).AddTicks(420),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Athena99@yahoo.com",
                            FullName = "Milton Yundt",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "765-924-1923"
                        },
                        new
                        {
                            Id = 41,
                            Address = "9926 Vidal Shoal, Klingshire, San Marino",
                            Birthday = new DateTime(1948, 12, 7, 12, 51, 41, 981, DateTimeKind.Utc).AddTicks(1433),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Vanessa_Renner31@gmail.com",
                            FullName = "Else Mertz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "909-869-0743"
                        },
                        new
                        {
                            Id = 42,
                            Address = "66138 Willard Turnpike, Port Karolann, New Caledonia",
                            Birthday = new DateTime(1956, 2, 25, 8, 21, 19, 486, DateTimeKind.Utc).AddTicks(876),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Florencio52@yahoo.com",
                            FullName = "Ramiro Pfeffer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "571-954-2781"
                        },
                        new
                        {
                            Id = 43,
                            Address = "101 Liza Point, Lake Zoratown, Japan",
                            Birthday = new DateTime(2000, 12, 25, 18, 44, 59, 146, DateTimeKind.Utc).AddTicks(9709),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Alphonso.Cronin31@yahoo.com",
                            FullName = "Noemi Hansen",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "327-441-4438"
                        },
                        new
                        {
                            Id = 44,
                            Address = "17210 Oscar Hills, Lake Yvette, Pakistan",
                            Birthday = new DateTime(1960, 10, 22, 9, 52, 32, 572, DateTimeKind.Utc).AddTicks(4407),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Adolf.Frami@yahoo.com",
                            FullName = "Everette Dickinson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "716-555-1576"
                        },
                        new
                        {
                            Id = 45,
                            Address = "679 Johnson Cape, East Claudineton, Sri Lanka",
                            Birthday = new DateTime(1973, 1, 27, 12, 44, 24, 543, DateTimeKind.Utc).AddTicks(8934),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Noble.Huel9@hotmail.com",
                            FullName = "Ofelia Douglas",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "446-383-2792"
                        },
                        new
                        {
                            Id = 46,
                            Address = "34356 Christine River, South Desireeland, Somalia",
                            Birthday = new DateTime(1944, 10, 1, 0, 24, 10, 85, DateTimeKind.Utc).AddTicks(1473),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Hosea.Cartwright67@hotmail.com",
                            FullName = "Jaren Langworth",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "933-357-3997"
                        },
                        new
                        {
                            Id = 47,
                            Address = "0405 Kaden Cape, Bessietown, Guyana",
                            Birthday = new DateTime(1961, 11, 18, 8, 55, 11, 570, DateTimeKind.Utc).AddTicks(7024),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Domenic.Treutel@yahoo.com",
                            FullName = "Ned Parisian",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "762-428-3779"
                        },
                        new
                        {
                            Id = 48,
                            Address = "833 Hettinger Flats, West Athenaland, Ghana",
                            Birthday = new DateTime(2002, 8, 1, 9, 47, 40, 343, DateTimeKind.Utc).AddTicks(9535),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Warren13@gmail.com",
                            FullName = "Lavonne Nienow",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "270-531-2966"
                        },
                        new
                        {
                            Id = 49,
                            Address = "732 Schinner Gardens, South Cathrine, Armenia",
                            Birthday = new DateTime(1983, 9, 28, 4, 44, 45, 47, DateTimeKind.Utc).AddTicks(6202),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Jeromy56@gmail.com",
                            FullName = "Fidel Rice",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "558-851-6622"
                        },
                        new
                        {
                            Id = 50,
                            Address = "132 McLaughlin Ville, East Judgehaven, Panama",
                            Birthday = new DateTime(1975, 12, 3, 2, 10, 1, 673, DateTimeKind.Utc).AddTicks(6106),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 46, 19, 455, DateTimeKind.Utc).AddTicks(3811),
                            Email = "Margaretta64@gmail.com",
                            FullName = "Treva Stokes",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "402-841-3371"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c64f8e52-12f9-4856-8498-7cff9308f288",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsDel = 0,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEDDtiJiYF0XFs5EUEjAlc4+TpA9WcnMZwusDbgKaLS0jN1j/YaDOEWY587q/ZGuY/g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "490bf01c-5618-45de-a311-eb57f2a304d0",
                            Status = 0,
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("BusCheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BusCheduleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,1)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("credit");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHis");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedDate = new DateTime(2022, 6, 13, 13, 46, 19, 403, DateTimeKind.Local).AddTicks(2949),
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TimeSchedule", "TimeSchedule")
                        .WithMany()
                        .HasForeignKey("TimeScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.HasOne("BusSystem.Entity.BusSchedule", "BusSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("BusCheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TransactionHis", "TransactionHis")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusSchedule");

                    b.Navigation("Customer");

                    b.Navigation("TransactionHis");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithOne("Ticket")
                        .HasForeignKey("BusSystem.Entity.Ticket", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Schedule", "Schedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany("TransactionHis")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BusSystem.Entity.Wallet", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Navigation("TransactionHis");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Navigation("TimeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
