// <auto-generated />
using System;
using BusSystem.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusSystem.Data.Migrations
{
    [DbContext(typeof(BusSystemDbContext))]
    [Migration("20220613065036_v9900")]
    partial class v9900
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusSystem.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<decimal>("PriceTicket")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimeScheduleId");

                    b.ToTable("BusSchedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "930 Friesen Neck, New Carrollland, Paraguay",
                            Birthday = new DateTime(1971, 7, 1, 22, 0, 49, 827, DateTimeKind.Utc).AddTicks(4698),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Sandy.Moen@yahoo.com",
                            FullName = "Tressa Ebert",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "606-420-1083"
                        },
                        new
                        {
                            Id = 2,
                            Address = "99182 Cleveland Plains, South Desiree, Ethiopia",
                            Birthday = new DateTime(1966, 3, 31, 22, 58, 59, 106, DateTimeKind.Utc).AddTicks(4807),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Jaiden_Jacobi73@yahoo.com",
                            FullName = "Jaida Heathcote",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "484-513-1384"
                        },
                        new
                        {
                            Id = 3,
                            Address = "986 Pollich Inlet, West Dion, Trinidad and Tobago",
                            Birthday = new DateTime(1974, 5, 25, 15, 44, 35, 568, DateTimeKind.Utc).AddTicks(8109),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Weldon_Koelpin49@yahoo.com",
                            FullName = "Marques Parisian",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "561-681-7457"
                        },
                        new
                        {
                            Id = 4,
                            Address = "781 Wolff Parks, Port Camden, Greece",
                            Birthday = new DateTime(1947, 12, 5, 19, 28, 4, 330, DateTimeKind.Utc).AddTicks(5927),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Zachariah.Walker69@gmail.com",
                            FullName = "Rachel Aufderhar",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "792-306-5055"
                        },
                        new
                        {
                            Id = 5,
                            Address = "6347 Idell Drives, Lednertown, Kiribati",
                            Birthday = new DateTime(1976, 5, 9, 1, 14, 47, 171, DateTimeKind.Utc).AddTicks(3612),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Cheyanne85@gmail.com",
                            FullName = "Janelle Gutkowski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "701-378-4739"
                        },
                        new
                        {
                            Id = 6,
                            Address = "56824 Emmerich Shoal, Port Randalchester, United Kingdom",
                            Birthday = new DateTime(1957, 9, 16, 23, 52, 3, 185, DateTimeKind.Utc).AddTicks(9595),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Gladyce45@yahoo.com",
                            FullName = "Maymie Frami",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "718-845-5680"
                        },
                        new
                        {
                            Id = 7,
                            Address = "560 Oleta Forges, New Christopher, Central African Republic",
                            Birthday = new DateTime(1998, 6, 22, 12, 49, 17, 921, DateTimeKind.Utc).AddTicks(7577),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Annie.Walter91@gmail.com",
                            FullName = "Haven Aufderhar",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "677-515-3291"
                        },
                        new
                        {
                            Id = 8,
                            Address = "9038 Donnelly Roads, Ferryland, Canada",
                            Birthday = new DateTime(1965, 7, 13, 21, 35, 2, 432, DateTimeKind.Utc).AddTicks(83),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Norene_Cassin@hotmail.com",
                            FullName = "Brando Jerde",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "918-768-1828"
                        },
                        new
                        {
                            Id = 9,
                            Address = "11397 Penelope Parkways, Beckerfort, Chad",
                            Birthday = new DateTime(1966, 10, 9, 3, 58, 56, 693, DateTimeKind.Utc).AddTicks(3830),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Jules.Mitchell@yahoo.com",
                            FullName = "Darron Nicolas",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "517-527-3350"
                        },
                        new
                        {
                            Id = 10,
                            Address = "83691 Wiley Ways, Dulcefort, Belize",
                            Birthday = new DateTime(2003, 4, 29, 6, 18, 23, 668, DateTimeKind.Utc).AddTicks(8697),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Colton60@yahoo.com",
                            FullName = "Pierce King",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "414-204-5887"
                        },
                        new
                        {
                            Id = 11,
                            Address = "6662 Madonna Trafficway, Dachburgh, Slovenia",
                            Birthday = new DateTime(1952, 5, 22, 19, 4, 40, 310, DateTimeKind.Utc).AddTicks(8236),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Carter.Rogahn97@hotmail.com",
                            FullName = "Retta Treutel",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "815-398-9535"
                        },
                        new
                        {
                            Id = 12,
                            Address = "355 Haleigh Prairie, Nikolausbury, Gibraltar",
                            Birthday = new DateTime(1950, 7, 3, 1, 12, 52, 964, DateTimeKind.Utc).AddTicks(7117),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Manuela.Cruickshank@hotmail.com",
                            FullName = "Polly Feil",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "258-917-2860"
                        },
                        new
                        {
                            Id = 13,
                            Address = "0455 Trace View, West Leonie, Belgium",
                            Birthday = new DateTime(1995, 8, 12, 2, 46, 42, 467, DateTimeKind.Utc).AddTicks(8176),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Raleigh14@hotmail.com",
                            FullName = "Maynard Bogan",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "895-286-4661"
                        },
                        new
                        {
                            Id = 14,
                            Address = "199 Gottlieb Shoal, Marcosshire, Tanzania",
                            Birthday = new DateTime(1964, 1, 24, 5, 22, 49, 571, DateTimeKind.Utc).AddTicks(1707),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Yasmeen_Runolfsson45@yahoo.com",
                            FullName = "Philip Pacocha",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "399-694-1224"
                        },
                        new
                        {
                            Id = 15,
                            Address = "280 Schumm Skyway, Mauriceland, Maldives",
                            Birthday = new DateTime(1997, 9, 22, 17, 36, 38, 474, DateTimeKind.Utc).AddTicks(4235),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Amaya64@gmail.com",
                            FullName = "Hayley Simonis",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "776-750-5988"
                        },
                        new
                        {
                            Id = 16,
                            Address = "1972 Roman Pass, North Ronaldo, Seychelles",
                            Birthday = new DateTime(1973, 12, 6, 2, 1, 57, 855, DateTimeKind.Utc).AddTicks(7302),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Garnett.Schowalter28@yahoo.com",
                            FullName = "Letha Stiedemann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "277-706-1628"
                        },
                        new
                        {
                            Id = 17,
                            Address = "258 Kristoffer Inlet, Langbury, Ecuador",
                            Birthday = new DateTime(1969, 8, 11, 8, 26, 18, 574, DateTimeKind.Utc).AddTicks(131),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Sigmund.Boehm@hotmail.com",
                            FullName = "Jaquelin Aufderhar",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "243-980-8478"
                        },
                        new
                        {
                            Id = 18,
                            Address = "9490 Aracely Key, Enidport, Iceland",
                            Birthday = new DateTime(1974, 3, 18, 18, 11, 48, 324, DateTimeKind.Utc).AddTicks(9685),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Jacinthe79@gmail.com",
                            FullName = "Aniyah Gutmann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "207-255-1907"
                        },
                        new
                        {
                            Id = 19,
                            Address = "255 Wilderman Brooks, Mitchellstad, Comoros",
                            Birthday = new DateTime(1969, 5, 10, 17, 25, 50, 684, DateTimeKind.Utc).AddTicks(1874),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Victor_Waters@yahoo.com",
                            FullName = "Stefanie Kuvalis",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "460-401-5645"
                        },
                        new
                        {
                            Id = 20,
                            Address = "68522 Alford Prairie, Lorenaside, Isle of Man",
                            Birthday = new DateTime(1975, 11, 11, 1, 56, 45, 668, DateTimeKind.Utc).AddTicks(209),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Bradford.Walker@hotmail.com",
                            FullName = "Douglas Bayer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "636-385-7343"
                        },
                        new
                        {
                            Id = 21,
                            Address = "592 Jake Circle, Lake Kimberlyland, New Caledonia",
                            Birthday = new DateTime(1945, 9, 2, 12, 57, 16, 299, DateTimeKind.Utc).AddTicks(7855),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Lester_Reichert55@gmail.com",
                            FullName = "Nils Wyman",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "942-275-1194"
                        },
                        new
                        {
                            Id = 22,
                            Address = "075 Angus Glen, Harberton, Somalia",
                            Birthday = new DateTime(1965, 3, 26, 13, 9, 26, 456, DateTimeKind.Utc).AddTicks(7824),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Whitney.Upton@gmail.com",
                            FullName = "Caleb Terry",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "772-701-4865"
                        },
                        new
                        {
                            Id = 23,
                            Address = "951 Price Rest, New Zetta, Yemen",
                            Birthday = new DateTime(1969, 9, 11, 9, 50, 11, 23, DateTimeKind.Utc).AddTicks(3569),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Adonis_Monahan@yahoo.com",
                            FullName = "Gretchen Stanton",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "677-374-1262"
                        },
                        new
                        {
                            Id = 24,
                            Address = "41950 Brando Ways, East Rhiannon, United States Minor Outlying Islands",
                            Birthday = new DateTime(1964, 6, 15, 16, 43, 15, 344, DateTimeKind.Utc).AddTicks(1192),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Lionel80@hotmail.com",
                            FullName = "Lysanne Howe",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "401-315-8154"
                        },
                        new
                        {
                            Id = 25,
                            Address = "466 Rachel Stravenue, New Abel, Macedonia",
                            Birthday = new DateTime(1949, 2, 1, 13, 25, 51, 488, DateTimeKind.Utc).AddTicks(2833),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Trisha.Sipes63@yahoo.com",
                            FullName = "Fae Hettinger",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "380-211-0945"
                        },
                        new
                        {
                            Id = 26,
                            Address = "589 Schiller Tunnel, Lake Kalebury, Panama",
                            Birthday = new DateTime(1996, 7, 15, 1, 28, 1, 942, DateTimeKind.Utc).AddTicks(3025),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Dayana.Padberg@yahoo.com",
                            FullName = "Alaina Hessel",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "481-426-8168"
                        },
                        new
                        {
                            Id = 27,
                            Address = "9602 Sophia Terrace, Hickleview, Georgia",
                            Birthday = new DateTime(1971, 7, 22, 5, 22, 54, 355, DateTimeKind.Utc).AddTicks(5330),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Gerda_Bergnaum32@yahoo.com",
                            FullName = "Jacques Dickens",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "860-534-6103"
                        },
                        new
                        {
                            Id = 28,
                            Address = "2620 Vida Lakes, Percybury, Trinidad and Tobago",
                            Birthday = new DateTime(1983, 8, 25, 12, 56, 14, 833, DateTimeKind.Utc).AddTicks(7019),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Monserrat.Corkery@hotmail.com",
                            FullName = "Daphney Crist",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "913-267-1532"
                        },
                        new
                        {
                            Id = 29,
                            Address = "059 Nash Prairie, Beckerport, Gabon",
                            Birthday = new DateTime(1991, 6, 17, 17, 34, 54, 974, DateTimeKind.Utc).AddTicks(5437),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Eliezer_Dicki94@hotmail.com",
                            FullName = "Jermain Bauch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "222-615-2822"
                        },
                        new
                        {
                            Id = 30,
                            Address = "6626 Ward Ports, Josephburgh, Togo",
                            Birthday = new DateTime(1972, 1, 21, 22, 22, 29, 215, DateTimeKind.Utc).AddTicks(4857),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Chelsey_Wilderman@hotmail.com",
                            FullName = "Lucious Gerhold",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "734-855-4014"
                        },
                        new
                        {
                            Id = 31,
                            Address = "67643 Leannon Square, West Gilberto, Albania",
                            Birthday = new DateTime(1944, 11, 9, 12, 7, 42, 715, DateTimeKind.Utc).AddTicks(4273),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Kirsten87@yahoo.com",
                            FullName = "Dominic Grady",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "804-460-0326"
                        },
                        new
                        {
                            Id = 32,
                            Address = "0042 Boyle Corner, Kuhlmanburgh, Guam",
                            Birthday = new DateTime(2002, 10, 30, 16, 44, 48, 176, DateTimeKind.Utc).AddTicks(7602),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Joey51@gmail.com",
                            FullName = "Idella Schmitt",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "534-441-3876"
                        },
                        new
                        {
                            Id = 33,
                            Address = "283 Will Bypass, Mikaylastad, Northern Mariana Islands",
                            Birthday = new DateTime(2003, 6, 6, 15, 41, 34, 406, DateTimeKind.Utc).AddTicks(6516),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Milan_Cormier@hotmail.com",
                            FullName = "Grant Kerluke",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "610-704-9839"
                        },
                        new
                        {
                            Id = 34,
                            Address = "370 Herman Path, West Maximilianmouth, Vanuatu",
                            Birthday = new DateTime(1962, 10, 10, 5, 36, 49, 732, DateTimeKind.Utc).AddTicks(3418),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Morris.Koepp15@hotmail.com",
                            FullName = "Pearline Collier",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "416-828-8191"
                        },
                        new
                        {
                            Id = 35,
                            Address = "6134 Nellie Summit, Tarynberg, Australia",
                            Birthday = new DateTime(1979, 7, 20, 9, 56, 51, 230, DateTimeKind.Utc).AddTicks(5683),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Estella40@gmail.com",
                            FullName = "Ted Wuckert",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "668-546-1074"
                        },
                        new
                        {
                            Id = 36,
                            Address = "2987 Fisher Mountains, Bomouth, Saint Barthelemy",
                            Birthday = new DateTime(1951, 12, 23, 12, 32, 5, 433, DateTimeKind.Utc).AddTicks(4225),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Lawson_Stiedemann38@hotmail.com",
                            FullName = "Lera Bode",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "835-885-9065"
                        },
                        new
                        {
                            Id = 37,
                            Address = "1507 Royce Highway, New Amalia, Gibraltar",
                            Birthday = new DateTime(1950, 9, 2, 4, 44, 30, 203, DateTimeKind.Utc).AddTicks(3476),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Linnea.Rogahn@gmail.com",
                            FullName = "Graham Steuber",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "223-910-1393"
                        },
                        new
                        {
                            Id = 38,
                            Address = "80261 Vada Glen, New Grace, Burundi",
                            Birthday = new DateTime(1987, 10, 13, 15, 51, 7, 351, DateTimeKind.Utc).AddTicks(1566),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Walker32@gmail.com",
                            FullName = "Tevin Dietrich",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "239-451-9818"
                        },
                        new
                        {
                            Id = 39,
                            Address = "98762 Summer Center, Wyattview, Mongolia",
                            Birthday = new DateTime(1948, 6, 24, 23, 44, 9, 608, DateTimeKind.Utc).AddTicks(8314),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Nyasia_Wunsch@hotmail.com",
                            FullName = "Liana Rippin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "208-683-3192"
                        },
                        new
                        {
                            Id = 40,
                            Address = "310 Feil Run, Juliafurt, South Africa",
                            Birthday = new DateTime(1955, 4, 22, 5, 3, 23, 492, DateTimeKind.Utc).AddTicks(9423),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Jackson91@gmail.com",
                            FullName = "Boyd Thiel",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "241-372-0507"
                        },
                        new
                        {
                            Id = 41,
                            Address = "7762 Mallory Mills, Lake Gay, Timor-Leste",
                            Birthday = new DateTime(1974, 6, 5, 0, 42, 16, 456, DateTimeKind.Utc).AddTicks(5112),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Dejon_Bartell@hotmail.com",
                            FullName = "Kenneth Olson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "502-994-3051"
                        },
                        new
                        {
                            Id = 42,
                            Address = "6187 Pfannerstill Fork, South Marcusfurt, Germany",
                            Birthday = new DateTime(2003, 1, 3, 18, 23, 4, 804, DateTimeKind.Utc).AddTicks(4317),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Cornell_Greenfelder56@gmail.com",
                            FullName = "Cierra Gutkowski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "868-312-1162"
                        },
                        new
                        {
                            Id = 43,
                            Address = "6586 Waelchi Stravenue, East Jarrettborough, Moldova",
                            Birthday = new DateTime(1966, 2, 3, 11, 10, 39, 674, DateTimeKind.Utc).AddTicks(2437),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Casimir30@yahoo.com",
                            FullName = "Katharina Beer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "762-728-0496"
                        },
                        new
                        {
                            Id = 44,
                            Address = "2362 Vandervort Course, Savannahfurt, Vanuatu",
                            Birthday = new DateTime(1991, 8, 8, 11, 44, 39, 595, DateTimeKind.Utc).AddTicks(461),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Lamar_Marquardt85@yahoo.com",
                            FullName = "Andy Wyman",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "933-376-6961"
                        },
                        new
                        {
                            Id = 45,
                            Address = "73846 Ritchie Brooks, North Sandyshire, Gibraltar",
                            Birthday = new DateTime(2000, 9, 3, 5, 42, 14, 369, DateTimeKind.Utc).AddTicks(8961),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Jerome73@yahoo.com",
                            FullName = "Tanner Ziemann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "372-221-4640"
                        },
                        new
                        {
                            Id = 46,
                            Address = "5830 Paucek Roads, East Claudine, Guyana",
                            Birthday = new DateTime(1975, 6, 17, 20, 10, 27, 748, DateTimeKind.Utc).AddTicks(8213),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Electa.McClure@hotmail.com",
                            FullName = "Belle Reynolds",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "428-718-5868"
                        },
                        new
                        {
                            Id = 47,
                            Address = "536 Yessenia Isle, Balistrerifort, Niger",
                            Birthday = new DateTime(1958, 1, 30, 19, 33, 15, 820, DateTimeKind.Utc).AddTicks(549),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Johanna.Stanton18@hotmail.com",
                            FullName = "Cynthia Wolff",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "288-906-6582"
                        },
                        new
                        {
                            Id = 48,
                            Address = "044 Krystel Forge, Colinhaven, China",
                            Birthday = new DateTime(1989, 5, 20, 18, 51, 23, 732, DateTimeKind.Utc).AddTicks(793),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Lew.Carter@hotmail.com",
                            FullName = "Nestor Fahey",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "736-210-7123"
                        },
                        new
                        {
                            Id = 49,
                            Address = "7322 Princess Harbors, Feeneyfort, Kyrgyz Republic",
                            Birthday = new DateTime(1952, 3, 11, 5, 55, 14, 677, DateTimeKind.Utc).AddTicks(82),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Minnie0@gmail.com",
                            FullName = "Mckenna Aufderhar",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "655-368-8738"
                        },
                        new
                        {
                            Id = 50,
                            Address = "945 Pagac Junction, Schmelerville, Austria",
                            Birthday = new DateTime(1950, 2, 22, 15, 49, 41, 67, DateTimeKind.Utc).AddTicks(2144),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 50, 35, 396, DateTimeKind.Utc).AddTicks(8359),
                            Email = "Kaya1@hotmail.com",
                            FullName = "Brady Sporer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "203-618-9959"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "08f50f0a-c3fd-4102-a8f0-b86dc9ee92f6",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsDel = 0,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEAj4br0g1mML+bUDsbuOn73C7pufxS1OXRDyVMMo0e4rlMCJRiZHoWSgHlIarUJVnw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "be1d3949-1015-4eca-a31a-807ef63b9cfb",
                            Status = 0,
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("BusCheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("TransacionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BusCheduleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,1)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("credit");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHis");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedDate = new DateTime(2022, 6, 13, 13, 50, 35, 341, DateTimeKind.Local).AddTicks(3004),
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TimeSchedule", "TimeSchedule")
                        .WithMany()
                        .HasForeignKey("TimeScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.HasOne("BusSystem.Entity.BusSchedule", "BusSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("BusCheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusSchedule");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithOne("Ticket")
                        .HasForeignKey("BusSystem.Entity.Ticket", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Schedule", "Schedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany("TransactionHis")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BusSystem.Entity.Wallet", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Navigation("TransactionHis");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Navigation("TimeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
