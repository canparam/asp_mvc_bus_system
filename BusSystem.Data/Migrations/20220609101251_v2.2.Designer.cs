// <auto-generated />
using System;
using BusSystem.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusSystem.Data.Migrations
{
    [DbContext(typeof(BusSystemDbContext))]
    [Migration("20220609101251_v2.2")]
    partial class v22
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusSystem.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<decimal>("PriceTicket")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimeScheduleId");

                    b.ToTable("BusSchedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "314 Mayert Hill, Port Orin, Honduras",
                            Birthday = new DateTime(1960, 10, 1, 9, 0, 4, 344, DateTimeKind.Utc).AddTicks(5482),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Mauricio_Boehm49@yahoo.com",
                            FullName = "Alyce Hayes",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-303-783-2254 x59060"
                        },
                        new
                        {
                            Id = 2,
                            Address = "35390 Teresa Plain, North Emilie, Saint Helena",
                            Birthday = new DateTime(2002, 5, 23, 18, 19, 39, 749, DateTimeKind.Utc).AddTicks(5664),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Bertha_Crona36@hotmail.com",
                            FullName = "Marc Oberbrunner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "989.204.8313 x0464"
                        },
                        new
                        {
                            Id = 3,
                            Address = "39226 VonRueden Tunnel, North Verona, Kiribati",
                            Birthday = new DateTime(1996, 12, 18, 16, 30, 50, 844, DateTimeKind.Utc).AddTicks(7444),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Dustin97@hotmail.com",
                            FullName = "Hailee Auer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "715-469-0081"
                        },
                        new
                        {
                            Id = 4,
                            Address = "8616 Collins Lock, Fletaside, Samoa",
                            Birthday = new DateTime(1982, 11, 30, 15, 57, 45, 517, DateTimeKind.Utc).AddTicks(5380),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Cory14@yahoo.com",
                            FullName = "Kendall Leffler",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-599-943-2391"
                        },
                        new
                        {
                            Id = 5,
                            Address = "8854 Swaniawski Mountain, Homenickside, Uzbekistan",
                            Birthday = new DateTime(1991, 9, 8, 3, 59, 19, 672, DateTimeKind.Utc).AddTicks(1800),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Dean_Greenfelder72@hotmail.com",
                            FullName = "Estefania Lockman",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "316.257.1632 x44802"
                        },
                        new
                        {
                            Id = 6,
                            Address = "65901 Keyshawn Turnpike, Alvenaton, Bulgaria",
                            Birthday = new DateTime(1992, 11, 27, 8, 10, 27, 673, DateTimeKind.Utc).AddTicks(866),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Katharina_Price@yahoo.com",
                            FullName = "Jerod Sanford",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "979.215.8512"
                        },
                        new
                        {
                            Id = 7,
                            Address = "34565 Jacobi Lane, Lawsonmouth, Dominica",
                            Birthday = new DateTime(1997, 7, 16, 13, 12, 12, 538, DateTimeKind.Utc).AddTicks(3448),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Peyton84@gmail.com",
                            FullName = "Kayleigh Rogahn",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "606.757.0648 x9925"
                        },
                        new
                        {
                            Id = 8,
                            Address = "43514 Vernon Ferry, Kiehnstad, Puerto Rico",
                            Birthday = new DateTime(1951, 4, 21, 0, 8, 22, 11, DateTimeKind.Utc).AddTicks(9522),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Michael.Zemlak70@hotmail.com",
                            FullName = "Ahmed Jacobson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "838.626.5626 x0851"
                        },
                        new
                        {
                            Id = 9,
                            Address = "18607 Johnnie Mill, North Delbertburgh, New Caledonia",
                            Birthday = new DateTime(1965, 5, 5, 21, 44, 1, 132, DateTimeKind.Utc).AddTicks(8594),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Herman_Greenholt36@hotmail.com",
                            FullName = "Trent Tillman",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(741) 223-7179"
                        },
                        new
                        {
                            Id = 10,
                            Address = "677 Edna Ports, New Israel, Hong Kong",
                            Birthday = new DateTime(1947, 5, 3, 22, 48, 9, 653, DateTimeKind.Utc).AddTicks(5108),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Isabel84@gmail.com",
                            FullName = "Ricky King",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-486-340-0623"
                        },
                        new
                        {
                            Id = 11,
                            Address = "4161 Schiller Ports, Mohrmouth, Belgium",
                            Birthday = new DateTime(1970, 3, 19, 17, 16, 16, 64, DateTimeKind.Utc).AddTicks(8148),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Corene_Cummings97@gmail.com",
                            FullName = "Leonel Gislason",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-820-637-2604 x38339"
                        },
                        new
                        {
                            Id = 12,
                            Address = "450 Colt Way, Tevinside, Slovakia (Slovak Republic)",
                            Birthday = new DateTime(1975, 2, 26, 10, 24, 46, 196, DateTimeKind.Utc).AddTicks(7338),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Robbie.Nienow@yahoo.com",
                            FullName = "Augustus Gaylord",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(627) 880-1329 x72119"
                        },
                        new
                        {
                            Id = 13,
                            Address = "987 Baumbach River, Lake Kareem, Austria",
                            Birthday = new DateTime(1970, 7, 17, 5, 6, 55, 440, DateTimeKind.Utc).AddTicks(4013),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Ahmed50@gmail.com",
                            FullName = "Beatrice Sipes",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(611) 981-3186 x865"
                        },
                        new
                        {
                            Id = 14,
                            Address = "7405 Rosemary Trail, South Emmittfurt, Oman",
                            Birthday = new DateTime(1963, 3, 6, 2, 30, 39, 991, DateTimeKind.Utc).AddTicks(1720),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Afton_Mohr@gmail.com",
                            FullName = "Eleanora Abbott",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-899-638-9141 x97553"
                        },
                        new
                        {
                            Id = 15,
                            Address = "037 Sonny Pine, Jadeville, Guinea-Bissau",
                            Birthday = new DateTime(1955, 1, 25, 20, 1, 47, 585, DateTimeKind.Utc).AddTicks(3372),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Britney88@gmail.com",
                            FullName = "Joshuah Fisher",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-659-958-0055"
                        },
                        new
                        {
                            Id = 16,
                            Address = "502 Wyman Shore, Lucyland, Netherlands",
                            Birthday = new DateTime(1981, 2, 14, 18, 57, 4, 791, DateTimeKind.Utc).AddTicks(5322),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Odessa82@hotmail.com",
                            FullName = "Armando Cartwright",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(520) 730-7405"
                        },
                        new
                        {
                            Id = 17,
                            Address = "0131 River Pines, New Luigihaven, Saint Kitts and Nevis",
                            Birthday = new DateTime(1949, 11, 15, 12, 54, 15, 107, DateTimeKind.Utc).AddTicks(8948),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Nat.Bradtke@yahoo.com",
                            FullName = "Tyreek Renner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "541.674.9010 x6599"
                        },
                        new
                        {
                            Id = 18,
                            Address = "94951 Weissnat Lock, Chaimville, Russian Federation",
                            Birthday = new DateTime(1949, 1, 4, 13, 55, 19, 856, DateTimeKind.Utc).AddTicks(9005),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Timmothy.Wisoky87@gmail.com",
                            FullName = "Zita Bechtelar",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-813-690-0098 x9579"
                        },
                        new
                        {
                            Id = 19,
                            Address = "5878 Jason Overpass, North Kathryne, New Caledonia",
                            Birthday = new DateTime(1947, 9, 27, 5, 40, 34, 383, DateTimeKind.Utc).AddTicks(522),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Velda31@gmail.com",
                            FullName = "Peggie Blanda",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "794-294-2726"
                        },
                        new
                        {
                            Id = 20,
                            Address = "412 Dooley Unions, Janisport, Nepal",
                            Birthday = new DateTime(1947, 12, 17, 23, 59, 31, 925, DateTimeKind.Utc).AddTicks(9998),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Isaias_Abbott@yahoo.com",
                            FullName = "Ursula Yundt",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-673-625-7503"
                        },
                        new
                        {
                            Id = 21,
                            Address = "2007 Dan Spurs, North Dylanburgh, Moldova",
                            Birthday = new DateTime(1983, 7, 4, 8, 26, 56, 218, DateTimeKind.Utc).AddTicks(8040),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Joesph14@yahoo.com",
                            FullName = "Bert Konopelski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-435-554-6280"
                        },
                        new
                        {
                            Id = 22,
                            Address = "67695 Rosalinda Fords, New Jevon, Bahamas",
                            Birthday = new DateTime(1965, 6, 27, 12, 49, 10, 166, DateTimeKind.Utc).AddTicks(7649),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Crystal16@gmail.com",
                            FullName = "Sienna Mraz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "307.962.8388 x01622"
                        },
                        new
                        {
                            Id = 23,
                            Address = "7970 Legros Junction, Lake Hermann, Zambia",
                            Birthday = new DateTime(1951, 1, 4, 10, 57, 3, 415, DateTimeKind.Utc).AddTicks(5441),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Misael.OConner17@gmail.com",
                            FullName = "Carissa Nolan",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-682-506-4487"
                        },
                        new
                        {
                            Id = 24,
                            Address = "710 O'Reilly Loaf, Naderfort, Bolivia",
                            Birthday = new DateTime(1947, 12, 6, 19, 59, 11, 981, DateTimeKind.Utc).AddTicks(5494),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Xzavier.Windler@hotmail.com",
                            FullName = "Garland Beer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "857-996-2305 x326"
                        },
                        new
                        {
                            Id = 25,
                            Address = "03119 Anastacio Falls, Mollieburgh, Dominican Republic",
                            Birthday = new DateTime(1962, 5, 10, 20, 9, 11, 237, DateTimeKind.Utc).AddTicks(3305),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Zelda_Sipes@yahoo.com",
                            FullName = "Gordon Hilll",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(279) 214-0554"
                        },
                        new
                        {
                            Id = 26,
                            Address = "8358 McLaughlin Isle, Lake Gardner, United States of America",
                            Birthday = new DateTime(1945, 8, 31, 18, 57, 51, 419, DateTimeKind.Utc).AddTicks(7760),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Frances.Bailey@gmail.com",
                            FullName = "Caleigh Quitzon",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(831) 460-0525"
                        },
                        new
                        {
                            Id = 27,
                            Address = "86009 Schuster Trafficway, New Dannieborough, Australia",
                            Birthday = new DateTime(1993, 8, 2, 10, 45, 2, 245, DateTimeKind.Utc).AddTicks(1904),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Maye5@yahoo.com",
                            FullName = "Kiana Kuphal",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(806) 493-7732 x72992"
                        },
                        new
                        {
                            Id = 28,
                            Address = "079 Dominique Tunnel, North Samanta, Chile",
                            Birthday = new DateTime(1972, 3, 23, 14, 32, 2, 113, DateTimeKind.Utc).AddTicks(3693),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Evelyn.Kiehn@gmail.com",
                            FullName = "Davon Kuhlman",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "893-322-6989 x419"
                        },
                        new
                        {
                            Id = 29,
                            Address = "2375 Medhurst Ville, Port Larissa, Saint Vincent and the Grenadines",
                            Birthday = new DateTime(1989, 7, 21, 17, 20, 24, 123, DateTimeKind.Utc).AddTicks(4594),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Rossie_Heathcote46@yahoo.com",
                            FullName = "Charlie Emard",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(300) 521-8998"
                        },
                        new
                        {
                            Id = 30,
                            Address = "2244 Renner Ways, North Garnet, Norfolk Island",
                            Birthday = new DateTime(1949, 9, 29, 7, 33, 35, 632, DateTimeKind.Utc).AddTicks(863),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Herman37@hotmail.com",
                            FullName = "Tracy Zieme",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-720-965-7057"
                        },
                        new
                        {
                            Id = 31,
                            Address = "1355 Laverne Pine, Port Orlandbury, Philippines",
                            Birthday = new DateTime(1982, 8, 8, 22, 25, 20, 252, DateTimeKind.Utc).AddTicks(3235),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Jace_Jacobson51@gmail.com",
                            FullName = "Maegan Jaskolski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "447-504-4196 x76404"
                        },
                        new
                        {
                            Id = 32,
                            Address = "046 Legros Ridges, Durganview, New Caledonia",
                            Birthday = new DateTime(1998, 1, 11, 20, 54, 4, 762, DateTimeKind.Utc).AddTicks(269),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Paolo31@hotmail.com",
                            FullName = "Arnulfo Shanahan",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "309-804-0208"
                        },
                        new
                        {
                            Id = 33,
                            Address = "6253 Walter Drive, Cormierville, Cote d'Ivoire",
                            Birthday = new DateTime(2003, 7, 9, 11, 4, 8, 907, DateTimeKind.Utc).AddTicks(1489),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Retta_Romaguera27@yahoo.com",
                            FullName = "Edwina Gutkowski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-509-977-0684 x8696"
                        },
                        new
                        {
                            Id = 34,
                            Address = "6268 Russel Row, Allenshire, Eritrea",
                            Birthday = new DateTime(1976, 2, 23, 14, 44, 3, 292, DateTimeKind.Utc).AddTicks(9072),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Autumn.Auer@gmail.com",
                            FullName = "Diego Lehner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(638) 929-5535 x332"
                        },
                        new
                        {
                            Id = 35,
                            Address = "6300 Agnes Roads, Augustusborough, Guernsey",
                            Birthday = new DateTime(1987, 6, 11, 14, 21, 12, 424, DateTimeKind.Utc).AddTicks(4042),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Lillian79@hotmail.com",
                            FullName = "Elena Schamberger",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "936.371.6334 x67968"
                        },
                        new
                        {
                            Id = 36,
                            Address = "311 Dooley Trail, Carrieburgh, Moldova",
                            Birthday = new DateTime(1949, 10, 23, 1, 22, 49, 301, DateTimeKind.Utc).AddTicks(3426),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Cayla80@hotmail.com",
                            FullName = "Leda Mitchell",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(325) 800-7603"
                        },
                        new
                        {
                            Id = 37,
                            Address = "07182 Rasheed Mountain, North Agnes, Honduras",
                            Birthday = new DateTime(1958, 8, 2, 16, 20, 46, 617, DateTimeKind.Utc).AddTicks(838),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Jadyn64@yahoo.com",
                            FullName = "Genoveva Padberg",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(782) 517-1070 x72474"
                        },
                        new
                        {
                            Id = 38,
                            Address = "9215 Prohaska Extensions, Dennisbury, China",
                            Birthday = new DateTime(1967, 11, 3, 6, 11, 19, 179, DateTimeKind.Utc).AddTicks(7549),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Nakia_Schmidt19@gmail.com",
                            FullName = "Skylar Connelly",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-550-311-7855 x353"
                        },
                        new
                        {
                            Id = 39,
                            Address = "16197 Kuvalis Mountains, Hildegardchester, Libyan Arab Jamahiriya",
                            Birthday = new DateTime(1963, 3, 15, 6, 35, 18, 273, DateTimeKind.Utc).AddTicks(6834),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Noelia.Price@gmail.com",
                            FullName = "Roselyn Terry",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "907.752.9098"
                        },
                        new
                        {
                            Id = 40,
                            Address = "6371 Feil Estate, Edgarfurt, Russian Federation",
                            Birthday = new DateTime(1944, 8, 8, 7, 58, 0, 618, DateTimeKind.Utc).AddTicks(5875),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Roosevelt_Lueilwitz@yahoo.com",
                            FullName = "Ryan Ruecker",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-614-757-9960 x9866"
                        },
                        new
                        {
                            Id = 41,
                            Address = "403 Bauch Flats, West Alphonso, Mauritius",
                            Birthday = new DateTime(1953, 10, 14, 13, 40, 54, 27, DateTimeKind.Utc).AddTicks(7296),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Jerald14@gmail.com",
                            FullName = "Kathleen Sporer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "517.646.4106"
                        },
                        new
                        {
                            Id = 42,
                            Address = "9741 Satterfield Shore, Patton, Cape Verde",
                            Birthday = new DateTime(1963, 9, 8, 22, 53, 5, 534, DateTimeKind.Utc).AddTicks(5619),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Arnulfo_Kohler@yahoo.com",
                            FullName = "Herminio Yundt",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "602-690-1373 x06939"
                        },
                        new
                        {
                            Id = 43,
                            Address = "087 Doyle Prairie, South Osbaldoburgh, Guinea-Bissau",
                            Birthday = new DateTime(1963, 2, 17, 17, 17, 22, 713, DateTimeKind.Utc).AddTicks(738),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Alexis_Morissette@yahoo.com",
                            FullName = "Bill Gutmann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "368.847.8510"
                        },
                        new
                        {
                            Id = 44,
                            Address = "584 Rylee Flats, South Rossport, Greenland",
                            Birthday = new DateTime(1999, 3, 16, 14, 56, 25, 705, DateTimeKind.Utc).AddTicks(3803),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Loren.Pacocha@yahoo.com",
                            FullName = "Paxton Quigley",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-505-705-8923 x69709"
                        },
                        new
                        {
                            Id = 45,
                            Address = "270 Laverne Course, South Erickburgh, Chad",
                            Birthday = new DateTime(1953, 12, 5, 14, 46, 5, 447, DateTimeKind.Utc).AddTicks(6142),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Mohammad56@yahoo.com",
                            FullName = "Krystina Metz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-666-892-7887 x2180"
                        },
                        new
                        {
                            Id = 46,
                            Address = "58056 Josefa Hills, South Brianaberg, Thailand",
                            Birthday = new DateTime(1958, 3, 23, 23, 41, 35, 727, DateTimeKind.Utc).AddTicks(6911),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Ryan.Bahringer41@yahoo.com",
                            FullName = "Bradly Senger",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(981) 542-2417 x6450"
                        },
                        new
                        {
                            Id = 47,
                            Address = "127 Cole Forge, Roselynport, Papua New Guinea",
                            Birthday = new DateTime(1946, 2, 2, 7, 5, 46, 469, DateTimeKind.Utc).AddTicks(5514),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Gaetano_Reichel42@gmail.com",
                            FullName = "Alvah Howell",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(647) 432-9848"
                        },
                        new
                        {
                            Id = 48,
                            Address = "2471 Stark Lakes, South Lambertmouth, Macedonia",
                            Birthday = new DateTime(1975, 4, 15, 8, 30, 37, 228, DateTimeKind.Utc).AddTicks(68),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Ewell_Will@gmail.com",
                            FullName = "Elias Runte",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "974.898.0243 x857"
                        },
                        new
                        {
                            Id = 49,
                            Address = "7948 Kurtis Drive, Ziemannfort, Qatar",
                            Birthday = new DateTime(1955, 8, 12, 7, 38, 12, 386, DateTimeKind.Utc).AddTicks(28),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Jo18@yahoo.com",
                            FullName = "Emmett Kuvalis",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "644-344-4777 x002"
                        },
                        new
                        {
                            Id = 50,
                            Address = "0485 Schmeler Trail, Auerburgh, Indonesia",
                            Birthday = new DateTime(1946, 5, 3, 2, 19, 31, 930, DateTimeKind.Utc).AddTicks(3345),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 12, 50, 972, DateTimeKind.Utc).AddTicks(9842),
                            Email = "Kieran_Ernser@hotmail.com",
                            FullName = "Willy Berge",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-881-272-2718 x95776"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("BusCheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,1)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BusCheduleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("credit");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHis");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TimeSchedule", "TimeSchedule")
                        .WithMany()
                        .HasForeignKey("TimeScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.HasOne("BusSystem.Entity.BusSchedule", "BusSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("BusCheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusSchedule");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithOne("Ticket")
                        .HasForeignKey("BusSystem.Entity.Ticket", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Schedule", "Schedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany("TransactionHis")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BusSystem.Entity.Wallet", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Navigation("TransactionHis");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Navigation("TimeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
