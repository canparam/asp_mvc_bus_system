// <auto-generated />
using System;
using BusSystem.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusSystem.Data.Migrations
{
    [DbContext(typeof(BusSystemDbContext))]
    [Migration("20220613064449_v999")]
    partial class v999
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusSystem.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<decimal>("PriceTicket")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimeScheduleId");

                    b.ToTable("BusSchedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "58114 Bechtelar Spring, Lake Dollyburgh, Marshall Islands",
                            Birthday = new DateTime(1983, 6, 22, 0, 9, 52, 876, DateTimeKind.Utc).AddTicks(607),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Paul39@hotmail.com",
                            FullName = "Greta McCullough",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "238-580-9072"
                        },
                        new
                        {
                            Id = 2,
                            Address = "3976 Brown Coves, Donnellyland, Sierra Leone",
                            Birthday = new DateTime(1995, 7, 11, 18, 41, 37, 856, DateTimeKind.Utc).AddTicks(8589),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Dixie_Schultz89@yahoo.com",
                            FullName = "Kali Gorczany",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "365-321-9491"
                        },
                        new
                        {
                            Id = 3,
                            Address = "2741 Sammie Square, Lake Darlene, Egypt",
                            Birthday = new DateTime(1988, 3, 22, 23, 43, 31, 83, DateTimeKind.Utc).AddTicks(1984),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Manley.McCullough@gmail.com",
                            FullName = "Jamarcus Dibbert",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "860-797-1894"
                        },
                        new
                        {
                            Id = 4,
                            Address = "9645 Louvenia Fort, North Morganfort, Republic of Korea",
                            Birthday = new DateTime(1977, 7, 23, 5, 57, 25, 800, DateTimeKind.Utc).AddTicks(4990),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Vern89@gmail.com",
                            FullName = "Jennyfer Sipes",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "464-985-2163"
                        },
                        new
                        {
                            Id = 5,
                            Address = "6869 Rhett Forest, New Mayramouth, Turkmenistan",
                            Birthday = new DateTime(1992, 3, 23, 20, 17, 3, 102, DateTimeKind.Utc).AddTicks(83),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Elza_Streich12@yahoo.com",
                            FullName = "Rene Bahringer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "667-658-7748"
                        },
                        new
                        {
                            Id = 6,
                            Address = "03259 Erwin Plains, East Tyraside, Turks and Caicos Islands",
                            Birthday = new DateTime(1986, 6, 29, 7, 12, 50, 503, DateTimeKind.Utc).AddTicks(9984),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Paul_Ritchie@hotmail.com",
                            FullName = "Dana Greenholt",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "904-207-8094"
                        },
                        new
                        {
                            Id = 7,
                            Address = "6766 Wiegand Court, Marilouview, Japan",
                            Birthday = new DateTime(1955, 8, 15, 4, 27, 10, 249, DateTimeKind.Utc).AddTicks(6250),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Shakira_Koepp13@yahoo.com",
                            FullName = "Eloisa Jerde",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "829-528-5341"
                        },
                        new
                        {
                            Id = 8,
                            Address = "370 Kris Centers, Schusterberg, Guinea-Bissau",
                            Birthday = new DateTime(1980, 8, 29, 13, 23, 51, 598, DateTimeKind.Utc).AddTicks(7586),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Addie95@yahoo.com",
                            FullName = "Lionel Keeling",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "671-260-2872"
                        },
                        new
                        {
                            Id = 9,
                            Address = "6208 Fritsch Rest, East Lennyville, Virgin Islands, U.S.",
                            Birthday = new DateTime(1996, 4, 18, 19, 11, 10, 949, DateTimeKind.Utc).AddTicks(1651),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Kurtis.Powlowski19@hotmail.com",
                            FullName = "Bud Kemmer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "656-662-4216"
                        },
                        new
                        {
                            Id = 10,
                            Address = "849 Kohler Curve, North Jeniferhaven, Chad",
                            Birthday = new DateTime(1944, 10, 5, 13, 57, 34, 969, DateTimeKind.Utc).AddTicks(2034),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Stanton1@yahoo.com",
                            FullName = "Jeanne Wilkinson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "425-893-5037"
                        },
                        new
                        {
                            Id = 11,
                            Address = "434 Okuneva Garden, Kovacekborough, Burundi",
                            Birthday = new DateTime(1980, 8, 1, 23, 11, 10, 783, DateTimeKind.Utc).AddTicks(7251),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Mae_Kshlerin@gmail.com",
                            FullName = "Santiago Muller",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "686-811-2171"
                        },
                        new
                        {
                            Id = 12,
                            Address = "15334 Jordy Branch, Lake Chelseahaven, Malawi",
                            Birthday = new DateTime(1998, 11, 18, 8, 26, 12, 74, DateTimeKind.Utc).AddTicks(9139),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Seth46@gmail.com",
                            FullName = "Katelynn Rutherford",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "807-385-5316"
                        },
                        new
                        {
                            Id = 13,
                            Address = "0492 Vada Trail, North Odatown, Jamaica",
                            Birthday = new DateTime(1989, 6, 24, 15, 22, 40, 743, DateTimeKind.Utc).AddTicks(5957),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Cletus.Wilkinson43@yahoo.com",
                            FullName = "Dexter Towne",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "401-371-6992"
                        },
                        new
                        {
                            Id = 14,
                            Address = "28211 Gussie Crossroad, Arnoburgh, Palau",
                            Birthday = new DateTime(1978, 9, 17, 12, 39, 9, 922, DateTimeKind.Utc).AddTicks(41),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Wilfred71@gmail.com",
                            FullName = "Savanah Satterfield",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "872-518-0989"
                        },
                        new
                        {
                            Id = 15,
                            Address = "106 Era Stravenue, East Dorthyland, Niger",
                            Birthday = new DateTime(1949, 2, 7, 14, 42, 57, 214, DateTimeKind.Utc).AddTicks(5953),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Bertrand98@hotmail.com",
                            FullName = "Elvera Zieme",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "819-253-2232"
                        },
                        new
                        {
                            Id = 16,
                            Address = "514 Stark Greens, Cartwrightmouth, Netherlands",
                            Birthday = new DateTime(1964, 6, 15, 3, 3, 45, 331, DateTimeKind.Utc).AddTicks(3441),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Maci97@gmail.com",
                            FullName = "Stevie Jenkins",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "940-359-0059"
                        },
                        new
                        {
                            Id = 17,
                            Address = "2005 Odell Courts, Lerafort, China",
                            Birthday = new DateTime(1964, 4, 12, 7, 23, 51, 389, DateTimeKind.Utc).AddTicks(697),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Juanita69@yahoo.com",
                            FullName = "Lexi Tillman",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "632-279-1367"
                        },
                        new
                        {
                            Id = 18,
                            Address = "480 Hyatt Circles, South Brandyn, Italy",
                            Birthday = new DateTime(1976, 11, 18, 23, 46, 3, 381, DateTimeKind.Utc).AddTicks(4383),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Marcelo.Shields55@yahoo.com",
                            FullName = "Deborah Ankunding",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "820-473-2489"
                        },
                        new
                        {
                            Id = 19,
                            Address = "22403 Kuhlman Villages, East Austin, Uzbekistan",
                            Birthday = new DateTime(1949, 5, 13, 3, 34, 28, 994, DateTimeKind.Utc).AddTicks(4787),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Bobbie51@hotmail.com",
                            FullName = "Savion King",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "347-388-1089"
                        },
                        new
                        {
                            Id = 20,
                            Address = "07550 Cole Villages, West Ada, Albania",
                            Birthday = new DateTime(1950, 2, 5, 15, 11, 16, 48, DateTimeKind.Utc).AddTicks(3447),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Jacques_Koepp@hotmail.com",
                            FullName = "Allen Buckridge",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "620-487-6012"
                        },
                        new
                        {
                            Id = 21,
                            Address = "78057 Bahringer Crescent, Creminmouth, Anguilla",
                            Birthday = new DateTime(1959, 7, 5, 14, 23, 38, 729, DateTimeKind.Utc).AddTicks(5646),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Wallace.Greenfelder@hotmail.com",
                            FullName = "Kyle Brekke",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "641-577-2246"
                        },
                        new
                        {
                            Id = 22,
                            Address = "8766 Santiago Gardens, North Selmer, Israel",
                            Birthday = new DateTime(1996, 12, 31, 21, 10, 37, 821, DateTimeKind.Utc).AddTicks(3287),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Reva.Abbott82@yahoo.com",
                            FullName = "Jannie Hand",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "748-365-2356"
                        },
                        new
                        {
                            Id = 23,
                            Address = "8505 Hills Via, Ritchieburgh, Greenland",
                            Birthday = new DateTime(1967, 8, 24, 2, 14, 38, 230, DateTimeKind.Utc).AddTicks(6091),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Marcus.Huels@hotmail.com",
                            FullName = "Keshawn Thompson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "766-628-2276"
                        },
                        new
                        {
                            Id = 24,
                            Address = "498 Lazaro Stravenue, East Aftonberg, Sierra Leone",
                            Birthday = new DateTime(1976, 10, 27, 14, 43, 20, 32, DateTimeKind.Utc).AddTicks(956),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Keira_Barton99@gmail.com",
                            FullName = "Erich Dach",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "293-569-4476"
                        },
                        new
                        {
                            Id = 25,
                            Address = "092 Langworth Creek, South Armando, Iceland",
                            Birthday = new DateTime(1972, 12, 20, 16, 1, 3, 967, DateTimeKind.Utc).AddTicks(3562),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Richmond_Russel@yahoo.com",
                            FullName = "Rickie Kemmer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "303-916-8898"
                        },
                        new
                        {
                            Id = 26,
                            Address = "0774 Krystel Well, Lake Edgardomouth, Latvia",
                            Birthday = new DateTime(1984, 11, 12, 14, 39, 40, 593, DateTimeKind.Utc).AddTicks(9512),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Rashawn72@yahoo.com",
                            FullName = "Sylvan Kub",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "848-239-5062"
                        },
                        new
                        {
                            Id = 27,
                            Address = "947 Libby Wall, Port Cordieville, Belarus",
                            Birthday = new DateTime(1955, 8, 11, 21, 2, 11, 646, DateTimeKind.Utc).AddTicks(8136),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Ludie5@hotmail.com",
                            FullName = "Alfonzo Bradtke",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "816-709-5204"
                        },
                        new
                        {
                            Id = 28,
                            Address = "175 Walsh Port, Schmelerbury, Poland",
                            Birthday = new DateTime(1950, 2, 21, 17, 27, 18, 960, DateTimeKind.Utc).AddTicks(5333),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Elna.Schulist@hotmail.com",
                            FullName = "Matteo Batz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "932-824-1226"
                        },
                        new
                        {
                            Id = 29,
                            Address = "13815 Stephon Burgs, Opalville, Venezuela",
                            Birthday = new DateTime(1987, 5, 12, 10, 55, 26, 275, DateTimeKind.Utc).AddTicks(2438),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Mortimer_Emmerich73@yahoo.com",
                            FullName = "Jaeden Pfeffer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "996-697-3738"
                        },
                        new
                        {
                            Id = 30,
                            Address = "8146 Gordon Alley, West Carymouth, Andorra",
                            Birthday = new DateTime(1985, 10, 31, 17, 25, 57, 764, DateTimeKind.Utc).AddTicks(5993),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Maximillia94@gmail.com",
                            FullName = "Aric Boehm",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "847-932-0491"
                        },
                        new
                        {
                            Id = 31,
                            Address = "073 Lang Crossing, Damianland, Tajikistan",
                            Birthday = new DateTime(1996, 7, 15, 2, 26, 52, 567, DateTimeKind.Utc).AddTicks(9599),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Berneice.Wilkinson@hotmail.com",
                            FullName = "Omari Renner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "271-832-0407"
                        },
                        new
                        {
                            Id = 32,
                            Address = "8089 Marianne Port, Rogeliochester, Honduras",
                            Birthday = new DateTime(1972, 9, 17, 1, 5, 34, 89, DateTimeKind.Utc).AddTicks(2705),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Kathleen.McGlynn@hotmail.com",
                            FullName = "Oscar Olson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "270-299-3374"
                        },
                        new
                        {
                            Id = 33,
                            Address = "6412 Reinger Plains, Millerberg, Italy",
                            Birthday = new DateTime(1948, 3, 4, 16, 10, 16, 179, DateTimeKind.Utc).AddTicks(7610),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Nat.Schmitt@gmail.com",
                            FullName = "Milan Bergstrom",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "866-557-3262"
                        },
                        new
                        {
                            Id = 34,
                            Address = "48291 Tromp Course, Port Chad, Democratic People's Republic of Korea",
                            Birthday = new DateTime(1970, 10, 4, 5, 55, 34, 214, DateTimeKind.Utc).AddTicks(1360),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Andreanne_Will@yahoo.com",
                            FullName = "Judd Gerhold",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "586-929-3023"
                        },
                        new
                        {
                            Id = 35,
                            Address = "092 Valentina Trail, Cormiermouth, Philippines",
                            Birthday = new DateTime(1950, 1, 15, 12, 40, 50, 369, DateTimeKind.Utc).AddTicks(1069),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Jimmy74@hotmail.com",
                            FullName = "Olen Stroman",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "369-783-3861"
                        },
                        new
                        {
                            Id = 36,
                            Address = "4167 Lillie Estates, North Glendamouth, Djibouti",
                            Birthday = new DateTime(1976, 10, 9, 17, 22, 41, 231, DateTimeKind.Utc).AddTicks(8282),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Nora.Koelpin@gmail.com",
                            FullName = "Claudia Schamberger",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "810-527-8959"
                        },
                        new
                        {
                            Id = 37,
                            Address = "26095 Tracey Hollow, Dickichester, Cuba",
                            Birthday = new DateTime(1980, 2, 14, 17, 54, 9, 600, DateTimeKind.Utc).AddTicks(1633),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Salvador18@yahoo.com",
                            FullName = "Grayce Rohan",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "895-243-3462"
                        },
                        new
                        {
                            Id = 38,
                            Address = "58484 Favian Course, West Johathanside, Guadeloupe",
                            Birthday = new DateTime(2002, 2, 27, 11, 24, 54, 208, DateTimeKind.Utc).AddTicks(9322),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Cesar_Bogisich@gmail.com",
                            FullName = "Amber Sauer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "302-954-0913"
                        },
                        new
                        {
                            Id = 39,
                            Address = "5336 Shaun Causeway, West Pattie, Namibia",
                            Birthday = new DateTime(2002, 8, 4, 18, 44, 49, 534, DateTimeKind.Utc).AddTicks(2737),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Walker51@yahoo.com",
                            FullName = "Maybelle Kulas",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "394-722-0508"
                        },
                        new
                        {
                            Id = 40,
                            Address = "9126 Hansen Island, Virginieberg, Tanzania",
                            Birthday = new DateTime(1967, 1, 8, 18, 35, 58, 957, DateTimeKind.Utc).AddTicks(7723),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Marcella.MacGyver59@gmail.com",
                            FullName = "Keara Pacocha",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "257-821-1590"
                        },
                        new
                        {
                            Id = 41,
                            Address = "7101 Dewayne Spurs, Swiftbury, Russian Federation",
                            Birthday = new DateTime(1964, 1, 29, 11, 1, 41, 621, DateTimeKind.Utc).AddTicks(4276),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Marcelo_Beatty@yahoo.com",
                            FullName = "Dolly Mayert",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "396-739-0017"
                        },
                        new
                        {
                            Id = 42,
                            Address = "3988 Calista Field, Abnerbury, Cote d'Ivoire",
                            Birthday = new DateTime(1949, 3, 11, 17, 53, 30, 435, DateTimeKind.Utc).AddTicks(961),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Amelie.Mitchell@gmail.com",
                            FullName = "Keshaun Graham",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "601-681-0927"
                        },
                        new
                        {
                            Id = 43,
                            Address = "3533 Fritsch Valley, South Augustbury, Rwanda",
                            Birthday = new DateTime(1971, 9, 30, 20, 4, 1, 230, DateTimeKind.Utc).AddTicks(652),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Genesis.Simonis54@yahoo.com",
                            FullName = "Madelyn Wunsch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "465-235-0147"
                        },
                        new
                        {
                            Id = 44,
                            Address = "270 O'Conner Ramp, East Janiya, Barbados",
                            Birthday = new DateTime(1945, 12, 1, 2, 21, 22, 635, DateTimeKind.Utc).AddTicks(3570),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Audrey_Marvin@hotmail.com",
                            FullName = "Brooks Douglas",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "524-895-8657"
                        },
                        new
                        {
                            Id = 45,
                            Address = "0777 Sienna Ports, Eddieborough, Cote d'Ivoire",
                            Birthday = new DateTime(1994, 7, 2, 16, 24, 42, 719, DateTimeKind.Utc).AddTicks(4237),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Lily.McCullough45@yahoo.com",
                            FullName = "Jermain Conn",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "623-893-7279"
                        },
                        new
                        {
                            Id = 46,
                            Address = "00088 Bernadine Ridges, Starkview, Sudan",
                            Birthday = new DateTime(1991, 1, 16, 16, 39, 26, 323, DateTimeKind.Utc).AddTicks(2236),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Adeline88@hotmail.com",
                            FullName = "Maribel Veum",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "460-219-8324"
                        },
                        new
                        {
                            Id = 47,
                            Address = "4946 Adams Unions, New Madison, United States Minor Outlying Islands",
                            Birthday = new DateTime(1980, 9, 14, 23, 3, 10, 386, DateTimeKind.Utc).AddTicks(7448),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Camren23@hotmail.com",
                            FullName = "Wade Rempel",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "675-855-1971"
                        },
                        new
                        {
                            Id = 48,
                            Address = "028 Tito Corners, Emilianostad, Egypt",
                            Birthday = new DateTime(1947, 3, 29, 14, 37, 17, 11, DateTimeKind.Utc).AddTicks(3003),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Uriah.Collins74@yahoo.com",
                            FullName = "Melisa Thompson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "324-381-7247"
                        },
                        new
                        {
                            Id = 49,
                            Address = "848 Delaney Shoals, Port Calefurt, Denmark",
                            Birthday = new DateTime(1989, 2, 26, 0, 49, 8, 66, DateTimeKind.Utc).AddTicks(7755),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Lonnie.Carter@yahoo.com",
                            FullName = "Jaida Durgan",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "444-761-4283"
                        },
                        new
                        {
                            Id = 50,
                            Address = "41132 Eloy Highway, New Fae, Aruba",
                            Birthday = new DateTime(1970, 5, 23, 23, 21, 10, 59, DateTimeKind.Utc).AddTicks(2538),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 44, 49, 146, DateTimeKind.Utc).AddTicks(9943),
                            Email = "Lela11@gmail.com",
                            FullName = "Richie Schmitt",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "815-784-8125"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "28856116-6cd7-460f-8333-95a9f3e6d6ab",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsDel = 0,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAELBbCrhNa7uwNoA2LE9UmVjyHXbVD6Opzt5EsjX/WLXYqfgd1lrZ80ZOne8SOYs2pA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "da4859eb-72af-47da-ad92-ff4552946876",
                            Status = 0,
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("BusCheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BusCheduleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,1)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("credit");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHis");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedDate = new DateTime(2022, 6, 13, 13, 44, 49, 96, DateTimeKind.Local).AddTicks(543),
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TimeSchedule", "TimeSchedule")
                        .WithMany()
                        .HasForeignKey("TimeScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.HasOne("BusSystem.Entity.BusSchedule", "BusSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("BusCheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TransactionHis", "TransactionHis")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusSchedule");

                    b.Navigation("Customer");

                    b.Navigation("TransactionHis");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithOne("Ticket")
                        .HasForeignKey("BusSystem.Entity.Ticket", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Schedule", "Schedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany("TransactionHis")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BusSystem.Entity.Wallet", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Navigation("TransactionHis");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Navigation("TimeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
