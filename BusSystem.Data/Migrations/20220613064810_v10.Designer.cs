// <auto-generated />
using System;
using BusSystem.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusSystem.Data.Migrations
{
    [DbContext(typeof(BusSystemDbContext))]
    [Migration("20220613064810_v10")]
    partial class v10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusSystem.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<decimal>("PriceTicket")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimeScheduleId");

                    b.ToTable("BusSchedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "91906 Hills Meadow, East Kayli, Rwanda",
                            Birthday = new DateTime(1982, 8, 31, 2, 15, 38, 72, DateTimeKind.Utc).AddTicks(2947),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Johnson_Von@hotmail.com",
                            FullName = "Garth Lueilwitz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "579-299-2626"
                        },
                        new
                        {
                            Id = 2,
                            Address = "6410 Lubowitz Pines, North Gabrielle, Eritrea",
                            Birthday = new DateTime(1984, 11, 16, 20, 39, 37, 176, DateTimeKind.Utc).AddTicks(3477),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Chelsie_Flatley20@hotmail.com",
                            FullName = "Ezekiel Rice",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "518-759-3564"
                        },
                        new
                        {
                            Id = 3,
                            Address = "8184 Altenwerth Bypass, New Alana, Turkey",
                            Birthday = new DateTime(1984, 8, 5, 19, 2, 40, 669, DateTimeKind.Utc).AddTicks(665),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Mack44@yahoo.com",
                            FullName = "Maximillia Kihn",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "513-273-8962"
                        },
                        new
                        {
                            Id = 4,
                            Address = "681 Beier Pine, New Lola, Saint Kitts and Nevis",
                            Birthday = new DateTime(1998, 10, 17, 19, 10, 44, 609, DateTimeKind.Utc).AddTicks(6559),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Brianne27@gmail.com",
                            FullName = "Tyson Krajcik",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "760-423-1396"
                        },
                        new
                        {
                            Id = 5,
                            Address = "3220 Senger Creek, West Tremaynetown, Saint Barthelemy",
                            Birthday = new DateTime(1975, 4, 8, 22, 47, 23, 556, DateTimeKind.Utc).AddTicks(1176),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Della82@yahoo.com",
                            FullName = "Darien Steuber",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "745-585-3382"
                        },
                        new
                        {
                            Id = 6,
                            Address = "2977 Walker Forge, Ebertchester, Angola",
                            Birthday = new DateTime(1964, 1, 7, 10, 43, 6, 178, DateTimeKind.Utc).AddTicks(3972),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Katelin.Spencer15@gmail.com",
                            FullName = "Misty Dickens",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "411-519-9698"
                        },
                        new
                        {
                            Id = 7,
                            Address = "51984 Hugh Parkway, New Cecilemouth, Mauritania",
                            Birthday = new DateTime(1992, 12, 21, 21, 1, 27, 120, DateTimeKind.Utc).AddTicks(5527),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Roberta19@yahoo.com",
                            FullName = "Garth Schimmel",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "654-808-3328"
                        },
                        new
                        {
                            Id = 8,
                            Address = "9361 O'Connell Parkways, Port Ezekiel, Kenya",
                            Birthday = new DateTime(1948, 5, 28, 0, 50, 16, 581, DateTimeKind.Utc).AddTicks(3360),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Freeda12@yahoo.com",
                            FullName = "Sigurd Morissette",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "457-435-0578"
                        },
                        new
                        {
                            Id = 9,
                            Address = "65981 Nickolas Inlet, North Demarcus, Tuvalu",
                            Birthday = new DateTime(1995, 1, 18, 12, 24, 31, 776, DateTimeKind.Utc).AddTicks(6074),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Bridie_Jast18@hotmail.com",
                            FullName = "Major Lueilwitz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "738-665-1546"
                        },
                        new
                        {
                            Id = 10,
                            Address = "06212 Frederique Estate, Lake Joanieport, India",
                            Birthday = new DateTime(1982, 6, 20, 20, 57, 11, 672, DateTimeKind.Utc).AddTicks(7665),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Frank.Gutmann36@gmail.com",
                            FullName = "Pietro Kessler",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "979-761-4335"
                        },
                        new
                        {
                            Id = 11,
                            Address = "3230 Mertz Ville, West Laila, Gambia",
                            Birthday = new DateTime(1991, 10, 21, 12, 0, 33, 195, DateTimeKind.Utc).AddTicks(4409),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Noble30@gmail.com",
                            FullName = "Mathias O'Kon",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "933-456-2358"
                        },
                        new
                        {
                            Id = 12,
                            Address = "34496 Zboncak Rue, Hermistonport, Dominica",
                            Birthday = new DateTime(1995, 12, 14, 21, 53, 49, 310, DateTimeKind.Utc).AddTicks(1886),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Irving_Altenwerth@yahoo.com",
                            FullName = "Queen Toy",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "473-403-4979"
                        },
                        new
                        {
                            Id = 13,
                            Address = "2430 Langworth Lodge, Frederiqueburgh, Malawi",
                            Birthday = new DateTime(2002, 4, 2, 23, 24, 56, 283, DateTimeKind.Utc).AddTicks(7072),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Elliot_Kunde@hotmail.com",
                            FullName = "Nakia Larson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "696-323-5839"
                        },
                        new
                        {
                            Id = 14,
                            Address = "461 Calista Walks, New Dustyfort, Mauritania",
                            Birthday = new DateTime(1950, 1, 18, 21, 29, 36, 464, DateTimeKind.Utc).AddTicks(2501),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Presley.Berge@yahoo.com",
                            FullName = "Joanny Pouros",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "502-232-9529"
                        },
                        new
                        {
                            Id = 15,
                            Address = "2888 Golda Locks, Klockochester, Turkey",
                            Birthday = new DateTime(1952, 3, 20, 1, 47, 21, 841, DateTimeKind.Utc).AddTicks(3874),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Annabel_Hudson82@gmail.com",
                            FullName = "Eryn Adams",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "805-896-9808"
                        },
                        new
                        {
                            Id = 16,
                            Address = "5051 Hahn Neck, Deontaestad, Niger",
                            Birthday = new DateTime(1986, 6, 3, 23, 6, 9, 530, DateTimeKind.Utc).AddTicks(2412),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Jerod.Dicki36@gmail.com",
                            FullName = "Heath Ebert",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "316-644-4830"
                        },
                        new
                        {
                            Id = 17,
                            Address = "75881 Hahn Burg, Carmellamouth, Jersey",
                            Birthday = new DateTime(1947, 8, 24, 6, 15, 49, 121, DateTimeKind.Utc).AddTicks(8067),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Eva.Jerde76@yahoo.com",
                            FullName = "Ocie Wyman",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "234-928-1021"
                        },
                        new
                        {
                            Id = 18,
                            Address = "44325 Janet Well, Lake Yazminton, Armenia",
                            Birthday = new DateTime(1975, 11, 5, 20, 59, 40, 828, DateTimeKind.Utc).AddTicks(3724),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Jamaal_Weber@hotmail.com",
                            FullName = "Carlos Watsica",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "324-588-9486"
                        },
                        new
                        {
                            Id = 19,
                            Address = "39285 Kasey Drives, Stevemouth, Democratic People's Republic of Korea",
                            Birthday = new DateTime(1996, 11, 6, 3, 21, 33, 740, DateTimeKind.Utc).AddTicks(4548),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Luigi.Gleason81@hotmail.com",
                            FullName = "Werner Kunze",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "571-201-6494"
                        },
                        new
                        {
                            Id = 20,
                            Address = "619 Rohan Viaduct, New Maximushaven, Guyana",
                            Birthday = new DateTime(1950, 2, 25, 10, 49, 50, 489, DateTimeKind.Utc).AddTicks(8737),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Maryam_DAmore90@yahoo.com",
                            FullName = "Seamus Bosco",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "782-754-1228"
                        },
                        new
                        {
                            Id = 21,
                            Address = "076 Maximillian Haven, Dollymouth, Rwanda",
                            Birthday = new DateTime(1983, 4, 9, 15, 45, 5, 503, DateTimeKind.Utc).AddTicks(250),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Nicklaus_Casper28@hotmail.com",
                            FullName = "Wilbert Bode",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "393-969-5254"
                        },
                        new
                        {
                            Id = 22,
                            Address = "763 Deckow Park, North Sydneeburgh, Jordan",
                            Birthday = new DateTime(1948, 4, 16, 22, 43, 1, 298, DateTimeKind.Utc).AddTicks(3711),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Scottie.Mueller47@gmail.com",
                            FullName = "Sven Predovic",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "481-664-5778"
                        },
                        new
                        {
                            Id = 23,
                            Address = "7130 Ansel Rue, Cadeland, Virgin Islands, U.S.",
                            Birthday = new DateTime(1963, 7, 5, 11, 30, 30, 9, DateTimeKind.Utc).AddTicks(2864),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Nasir_Shanahan83@hotmail.com",
                            FullName = "Coralie Dach",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "537-584-4129"
                        },
                        new
                        {
                            Id = 24,
                            Address = "018 Thompson Loop, New Hettie, Rwanda",
                            Birthday = new DateTime(1982, 7, 24, 6, 58, 19, 410, DateTimeKind.Utc).AddTicks(8020),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Curt_Armstrong@hotmail.com",
                            FullName = "Lilla Hansen",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "923-272-2723"
                        },
                        new
                        {
                            Id = 25,
                            Address = "21027 Schuppe Glen, Maverickborough, Solomon Islands",
                            Birthday = new DateTime(2003, 12, 27, 13, 19, 54, 718, DateTimeKind.Utc).AddTicks(6885),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Greg47@yahoo.com",
                            FullName = "Deja Bergstrom",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "695-514-0267"
                        },
                        new
                        {
                            Id = 26,
                            Address = "5499 Elna Spring, South Candido, Lao People's Democratic Republic",
                            Birthday = new DateTime(1972, 10, 9, 22, 57, 17, 267, DateTimeKind.Utc).AddTicks(3933),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Sydnee.Glover@gmail.com",
                            FullName = "Rebeka Simonis",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "274-271-3782"
                        },
                        new
                        {
                            Id = 27,
                            Address = "378 Beahan Ville, Runolfsdottirberg, Mauritius",
                            Birthday = new DateTime(1995, 9, 6, 18, 21, 53, 442, DateTimeKind.Utc).AddTicks(9838),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Reese.Botsford@hotmail.com",
                            FullName = "Raleigh Hills",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "204-277-8971"
                        },
                        new
                        {
                            Id = 28,
                            Address = "174 Bailey Wall, South Kenyachester, Jordan",
                            Birthday = new DateTime(1987, 7, 27, 0, 17, 47, 370, DateTimeKind.Utc).AddTicks(7763),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Coty.Hackett30@hotmail.com",
                            FullName = "Frieda Simonis",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "317-420-2010"
                        },
                        new
                        {
                            Id = 29,
                            Address = "09630 Jenifer Lodge, South Jakayla, Haiti",
                            Birthday = new DateTime(2003, 4, 13, 11, 41, 13, 258, DateTimeKind.Utc).AddTicks(1267),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Ryann.Ondricka@yahoo.com",
                            FullName = "Lily Littel",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "862-263-8997"
                        },
                        new
                        {
                            Id = 30,
                            Address = "37276 Herbert Corners, Beahanside, Mayotte",
                            Birthday = new DateTime(1985, 5, 1, 22, 27, 37, 363, DateTimeKind.Utc).AddTicks(7304),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Ahmad50@hotmail.com",
                            FullName = "Eloise Bayer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "474-639-8120"
                        },
                        new
                        {
                            Id = 31,
                            Address = "5349 Kertzmann Crossing, East Burnice, Bolivia",
                            Birthday = new DateTime(1965, 11, 30, 7, 18, 37, 980, DateTimeKind.Utc).AddTicks(3833),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Alysson_Zulauf26@gmail.com",
                            FullName = "Marcelino Mertz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "663-838-0155"
                        },
                        new
                        {
                            Id = 32,
                            Address = "8743 Kendrick Via, Larryshire, Ghana",
                            Birthday = new DateTime(1970, 6, 25, 1, 51, 12, 395, DateTimeKind.Utc).AddTicks(1143),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Mathias.Olson29@gmail.com",
                            FullName = "Allan Padberg",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "399-563-1352"
                        },
                        new
                        {
                            Id = 33,
                            Address = "7111 Myrl Junction, Trystanside, Costa Rica",
                            Birthday = new DateTime(1960, 11, 4, 18, 57, 49, 366, DateTimeKind.Utc).AddTicks(8537),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Nedra.Kuhlman@hotmail.com",
                            FullName = "Wellington Hamill",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "775-563-2857"
                        },
                        new
                        {
                            Id = 34,
                            Address = "453 Libby Roads, Purdytown, British Indian Ocean Territory (Chagos Archipelago)",
                            Birthday = new DateTime(1966, 11, 20, 5, 47, 44, 365, DateTimeKind.Utc).AddTicks(1311),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Amya.Sawayn37@yahoo.com",
                            FullName = "Herminia Von",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "872-285-0531"
                        },
                        new
                        {
                            Id = 35,
                            Address = "912 Stracke Forge, Port Ashly, Martinique",
                            Birthday = new DateTime(1946, 2, 6, 11, 52, 50, 292, DateTimeKind.Utc).AddTicks(1815),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Lilla31@yahoo.com",
                            FullName = "Ronaldo Leffler",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "523-958-3340"
                        },
                        new
                        {
                            Id = 36,
                            Address = "30588 Chauncey Ramp, Boehmton, United Kingdom",
                            Birthday = new DateTime(2003, 4, 18, 8, 8, 36, 264, DateTimeKind.Utc).AddTicks(6004),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Era.Klein37@gmail.com",
                            FullName = "Madisyn VonRueden",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "292-691-7585"
                        },
                        new
                        {
                            Id = 37,
                            Address = "728 Koepp Square, Johannfurt, Belgium",
                            Birthday = new DateTime(1994, 8, 7, 22, 42, 43, 21, DateTimeKind.Utc).AddTicks(9077),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Lucienne6@gmail.com",
                            FullName = "Ashly Moen",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "955-215-1972"
                        },
                        new
                        {
                            Id = 38,
                            Address = "21757 Kreiger Ramp, Dillanfort, Malaysia",
                            Birthday = new DateTime(1945, 3, 20, 13, 37, 12, 532, DateTimeKind.Utc).AddTicks(1538),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Bethany_OKeefe@hotmail.com",
                            FullName = "Dianna Berge",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "550-808-5328"
                        },
                        new
                        {
                            Id = 39,
                            Address = "6636 Hackett Heights, South Deion, French Guiana",
                            Birthday = new DateTime(1989, 7, 10, 1, 39, 33, 606, DateTimeKind.Utc).AddTicks(3623),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Luciano_McKenzie@hotmail.com",
                            FullName = "Aliya Altenwerth",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "226-717-7387"
                        },
                        new
                        {
                            Id = 40,
                            Address = "964 O'Conner Hill, North Bret, Ghana",
                            Birthday = new DateTime(2003, 2, 13, 3, 13, 37, 522, DateTimeKind.Utc).AddTicks(3997),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Ericka.Rogahn87@gmail.com",
                            FullName = "Reba Koch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "719-933-8356"
                        },
                        new
                        {
                            Id = 41,
                            Address = "553 Turcotte Parkways, Tadhaven, Guernsey",
                            Birthday = new DateTime(2002, 3, 23, 0, 54, 53, 635, DateTimeKind.Utc).AddTicks(5447),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Velva.Murazik96@yahoo.com",
                            FullName = "Ella Schroeder",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "680-755-6435"
                        },
                        new
                        {
                            Id = 42,
                            Address = "03712 Jeffery Manors, Curtfort, Bahrain",
                            Birthday = new DateTime(1959, 7, 3, 8, 56, 49, 501, DateTimeKind.Utc).AddTicks(63),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Murl44@hotmail.com",
                            FullName = "Leonard Champlin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "270-777-3381"
                        },
                        new
                        {
                            Id = 43,
                            Address = "045 Feest Street, Mariannemouth, France",
                            Birthday = new DateTime(1945, 2, 16, 3, 47, 5, 640, DateTimeKind.Utc).AddTicks(4582),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Dwight_Konopelski69@yahoo.com",
                            FullName = "Edmund Towne",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "910-423-1776"
                        },
                        new
                        {
                            Id = 44,
                            Address = "051 Dach Burgs, Sylvesterfurt, Sweden",
                            Birthday = new DateTime(1977, 10, 25, 16, 4, 57, 695, DateTimeKind.Utc).AddTicks(7735),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Janae46@hotmail.com",
                            FullName = "Warren Stiedemann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "914-635-8778"
                        },
                        new
                        {
                            Id = 45,
                            Address = "314 Schuster Run, West Dimitristad, Armenia",
                            Birthday = new DateTime(2003, 2, 27, 20, 21, 48, 109, DateTimeKind.Utc).AddTicks(8311),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Eloy_MacGyver@yahoo.com",
                            FullName = "Mya Hills",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "927-636-5622"
                        },
                        new
                        {
                            Id = 46,
                            Address = "2611 Cathryn Stream, Nienowberg, Martinique",
                            Birthday = new DateTime(1984, 11, 26, 7, 43, 10, 343, DateTimeKind.Utc).AddTicks(34),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Gudrun_Harvey21@yahoo.com",
                            FullName = "Deron Hegmann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "577-940-2117"
                        },
                        new
                        {
                            Id = 47,
                            Address = "87092 Fahey Shores, Batzshire, Armenia",
                            Birthday = new DateTime(1992, 5, 14, 22, 1, 41, 18, DateTimeKind.Utc).AddTicks(9128),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Bettye27@gmail.com",
                            FullName = "Susie Dicki",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "796-265-6704"
                        },
                        new
                        {
                            Id = 48,
                            Address = "3641 Juliana River, Dorothealand, Cuba",
                            Birthday = new DateTime(1962, 5, 8, 9, 2, 0, 376, DateTimeKind.Utc).AddTicks(7775),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Howell2@hotmail.com",
                            FullName = "Zackery Jacobi",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "964-590-9521"
                        },
                        new
                        {
                            Id = 49,
                            Address = "86375 Wyman Mission, Boyerberg, Saint Vincent and the Grenadines",
                            Birthday = new DateTime(1955, 12, 24, 1, 53, 54, 851, DateTimeKind.Utc).AddTicks(6120),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Trey84@yahoo.com",
                            FullName = "Anna Beer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "809-549-2477"
                        },
                        new
                        {
                            Id = 50,
                            Address = "7362 VonRueden Terrace, Franeckibury, Palau",
                            Birthday = new DateTime(1972, 1, 17, 12, 23, 21, 290, DateTimeKind.Utc).AddTicks(5010),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 48, 10, 160, DateTimeKind.Utc).AddTicks(7854),
                            Email = "Christiana_Gerlach@gmail.com",
                            FullName = "Grady Hamill",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "622-991-4555"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ede1e264-5322-43ab-82f7-c7d31e023eb8",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsDel = 0,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEEoOnWR/V7l0NaiEjaoxBDh1YPkBwbOL5FU6CjfejMSg+QxpUJVWMceBTooBrnUSQw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6158a7ca-0d18-48aa-b487-696862b8ae47",
                            Status = 0,
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("BusCheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BusCheduleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,1)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("credit");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHis");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedDate = new DateTime(2022, 6, 13, 13, 48, 10, 105, DateTimeKind.Local).AddTicks(5594),
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TimeSchedule", "TimeSchedule")
                        .WithMany()
                        .HasForeignKey("TimeScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.HasOne("BusSystem.Entity.BusSchedule", "BusSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("BusCheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TransactionHis", "TransactionHis")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusSchedule");

                    b.Navigation("Customer");

                    b.Navigation("TransactionHis");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithOne("Ticket")
                        .HasForeignKey("BusSystem.Entity.Ticket", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Schedule", "Schedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany("TransactionHis")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BusSystem.Entity.Wallet", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Navigation("TransactionHis");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Navigation("TimeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
