// <auto-generated />
using System;
using BusSystem.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusSystem.Data.Migrations
{
    [DbContext(typeof(BusSystemDbContext))]
    [Migration("20220613064204_v99")]
    partial class v99
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusSystem.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<decimal>("PriceTicket")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimeScheduleId");

                    b.ToTable("BusSchedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "5304 Arne Causeway, North Quentin, Ghana",
                            Birthday = new DateTime(1993, 12, 17, 17, 46, 33, 636, DateTimeKind.Utc).AddTicks(1656),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Ada.Rice@yahoo.com",
                            FullName = "Dwight Sauer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "622-677-7470"
                        },
                        new
                        {
                            Id = 2,
                            Address = "2189 Powlowski Land, New Johathanmouth, Tajikistan",
                            Birthday = new DateTime(1985, 3, 31, 8, 8, 38, 260, DateTimeKind.Utc).AddTicks(5238),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Otilia_Lesch@hotmail.com",
                            FullName = "Esta Klocko",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "872-210-4330"
                        },
                        new
                        {
                            Id = 3,
                            Address = "407 Immanuel Islands, Raeville, Iraq",
                            Birthday = new DateTime(1950, 10, 23, 3, 13, 12, 967, DateTimeKind.Utc).AddTicks(9028),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Moises_Shields@hotmail.com",
                            FullName = "Kaya Witting",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "755-460-5753"
                        },
                        new
                        {
                            Id = 4,
                            Address = "688 Orn Landing, Ellieview, Somalia",
                            Birthday = new DateTime(1992, 10, 8, 9, 1, 2, 847, DateTimeKind.Utc).AddTicks(4156),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Queenie.Hermiston@gmail.com",
                            FullName = "Roosevelt Rohan",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "495-632-4529"
                        },
                        new
                        {
                            Id = 5,
                            Address = "282 Strosin Haven, North Verlie, Macao",
                            Birthday = new DateTime(1991, 6, 6, 14, 46, 33, 868, DateTimeKind.Utc).AddTicks(1834),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Reina64@yahoo.com",
                            FullName = "Rubye Orn",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "331-302-7952"
                        },
                        new
                        {
                            Id = 6,
                            Address = "793 Susanna Key, Jovanport, Brunei Darussalam",
                            Birthday = new DateTime(1996, 9, 26, 13, 30, 53, 224, DateTimeKind.Utc).AddTicks(8382),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Mallie91@gmail.com",
                            FullName = "Dale Stiedemann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "526-776-3766"
                        },
                        new
                        {
                            Id = 7,
                            Address = "0430 Hillard Route, Lake Zulashire, Philippines",
                            Birthday = new DateTime(1959, 6, 17, 2, 0, 7, 684, DateTimeKind.Utc).AddTicks(4911),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Alberta.Schmitt@gmail.com",
                            FullName = "Autumn Hirthe",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "774-767-1356"
                        },
                        new
                        {
                            Id = 8,
                            Address = "65690 Stehr Coves, Hesselshire, Dominica",
                            Birthday = new DateTime(1964, 2, 14, 8, 37, 47, 57, DateTimeKind.Utc).AddTicks(9873),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Savion_Bosco9@gmail.com",
                            FullName = "Albina Gusikowski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "808-758-9907"
                        },
                        new
                        {
                            Id = 9,
                            Address = "132 Stroman Turnpike, Hellerstad, Saudi Arabia",
                            Birthday = new DateTime(1979, 8, 5, 23, 58, 39, 334, DateTimeKind.Utc).AddTicks(6057),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Garrick52@yahoo.com",
                            FullName = "Georgette Bogan",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "512-945-8958"
                        },
                        new
                        {
                            Id = 10,
                            Address = "40199 Gorczany Mountains, New Bruce, Italy",
                            Birthday = new DateTime(1997, 1, 17, 22, 42, 11, 328, DateTimeKind.Utc).AddTicks(1291),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Ida_Bauch@gmail.com",
                            FullName = "Jonathon Paucek",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "824-692-3008"
                        },
                        new
                        {
                            Id = 11,
                            Address = "19909 Etha Fort, Joeport, Malta",
                            Birthday = new DateTime(2000, 9, 24, 5, 53, 4, 40, DateTimeKind.Utc).AddTicks(2791),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Hugh_Mraz@gmail.com",
                            FullName = "Johan Kessler",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "583-600-3219"
                        },
                        new
                        {
                            Id = 12,
                            Address = "793 Swaniawski Villages, South Sunnyside, Andorra",
                            Birthday = new DateTime(1961, 6, 22, 17, 48, 33, 665, DateTimeKind.Utc).AddTicks(9678),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Graciela65@hotmail.com",
                            FullName = "Calista Block",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "599-424-1228"
                        },
                        new
                        {
                            Id = 13,
                            Address = "710 Alberto Motorway, Marcusberg, Kiribati",
                            Birthday = new DateTime(1949, 5, 7, 18, 47, 33, 59, DateTimeKind.Utc).AddTicks(5151),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Velda.Graham@yahoo.com",
                            FullName = "Marc Rosenbaum",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "982-277-5964"
                        },
                        new
                        {
                            Id = 14,
                            Address = "1564 Omer Spurs, Zulaberg, Algeria",
                            Birthday = new DateTime(1960, 1, 23, 1, 39, 8, 390, DateTimeKind.Utc).AddTicks(5360),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Jesse.Bernier@gmail.com",
                            FullName = "Omer Larson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "918-959-8075"
                        },
                        new
                        {
                            Id = 15,
                            Address = "01887 Velda Spring, Kenburgh, Bermuda",
                            Birthday = new DateTime(1968, 11, 4, 20, 41, 28, 97, DateTimeKind.Utc).AddTicks(8467),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Zoey91@gmail.com",
                            FullName = "Kacey Buckridge",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "285-256-8891"
                        },
                        new
                        {
                            Id = 16,
                            Address = "7349 Verner Trail, Luciusland, Estonia",
                            Birthday = new DateTime(1966, 11, 12, 10, 57, 56, 316, DateTimeKind.Utc).AddTicks(9664),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Javon.Hane@yahoo.com",
                            FullName = "Raymond Dicki",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "260-574-5411"
                        },
                        new
                        {
                            Id = 17,
                            Address = "863 Lilian Road, West Kennedishire, Iran",
                            Birthday = new DateTime(1982, 5, 19, 23, 46, 11, 210, DateTimeKind.Utc).AddTicks(8630),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Emory37@hotmail.com",
                            FullName = "Edwardo Willms",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "607-473-5553"
                        },
                        new
                        {
                            Id = 18,
                            Address = "8086 Weissnat Fords, Dejonfort, Portugal",
                            Birthday = new DateTime(1949, 12, 14, 10, 11, 35, 599, DateTimeKind.Utc).AddTicks(8036),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Lois.Heidenreich52@yahoo.com",
                            FullName = "Forest Cummings",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "376-861-7212"
                        },
                        new
                        {
                            Id = 19,
                            Address = "44581 Felicity Roads, Rooseveltton, Equatorial Guinea",
                            Birthday = new DateTime(2002, 3, 9, 10, 30, 7, 193, DateTimeKind.Utc).AddTicks(6396),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Maud86@hotmail.com",
                            FullName = "Ashly Bartoletti",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "204-880-3007"
                        },
                        new
                        {
                            Id = 20,
                            Address = "29927 Lehner Plains, Adriannaland, Turkmenistan",
                            Birthday = new DateTime(1968, 10, 7, 21, 8, 10, 960, DateTimeKind.Utc).AddTicks(1551),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Brennan.Weber@yahoo.com",
                            FullName = "Max Jacobs",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "290-318-4614"
                        },
                        new
                        {
                            Id = 21,
                            Address = "51492 Rosie Green, Hardyville, Angola",
                            Birthday = new DateTime(1983, 7, 16, 18, 33, 2, 832, DateTimeKind.Utc).AddTicks(8289),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Isai.Wintheiser11@hotmail.com",
                            FullName = "Jacky Deckow",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "532-493-7828"
                        },
                        new
                        {
                            Id = 22,
                            Address = "0671 Pacocha Shoal, Lake Kenyon, Liechtenstein",
                            Birthday = new DateTime(1955, 10, 16, 6, 29, 2, 418, DateTimeKind.Utc).AddTicks(8888),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Jeffrey13@gmail.com",
                            FullName = "Oscar Franecki",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "500-498-5314"
                        },
                        new
                        {
                            Id = 23,
                            Address = "527 Nicole Lane, Hagenesbury, Uganda",
                            Birthday = new DateTime(2002, 7, 22, 2, 20, 48, 11, DateTimeKind.Utc).AddTicks(3792),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Quinten25@yahoo.com",
                            FullName = "Lelah Rempel",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "406-429-3588"
                        },
                        new
                        {
                            Id = 24,
                            Address = "63069 Mraz Gateway, South Davonteville, Uruguay",
                            Birthday = new DateTime(1995, 11, 19, 14, 11, 47, 837, DateTimeKind.Utc).AddTicks(5260),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Frankie.Berge87@gmail.com",
                            FullName = "Claudia Reichert",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "377-452-3874"
                        },
                        new
                        {
                            Id = 25,
                            Address = "14053 Hallie Harbor, South Ianland, Vanuatu",
                            Birthday = new DateTime(1990, 4, 5, 12, 22, 48, 133, DateTimeKind.Utc).AddTicks(4468),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Jannie_Robel@yahoo.com",
                            FullName = "Johnathan Daugherty",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "629-341-0682"
                        },
                        new
                        {
                            Id = 26,
                            Address = "0931 Schinner Pine, Lake Cordelia, Cuba",
                            Birthday = new DateTime(1982, 12, 29, 11, 47, 58, 356, DateTimeKind.Utc).AddTicks(3560),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Effie24@yahoo.com",
                            FullName = "Mitchel Ankunding",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "761-280-5803"
                        },
                        new
                        {
                            Id = 27,
                            Address = "0494 Gavin Shore, Buckridgebury, Gabon",
                            Birthday = new DateTime(1978, 12, 24, 15, 31, 23, 817, DateTimeKind.Utc).AddTicks(8576),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Marquise_Christiansen@gmail.com",
                            FullName = "Hadley Renner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "699-694-1070"
                        },
                        new
                        {
                            Id = 28,
                            Address = "797 Nitzsche Street, New Fredrickfort, Uruguay",
                            Birthday = new DateTime(1946, 5, 1, 7, 54, 45, 955, DateTimeKind.Utc).AddTicks(144),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Shanelle_Keeling69@gmail.com",
                            FullName = "Danial Wehner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "482-613-5950"
                        },
                        new
                        {
                            Id = 29,
                            Address = "729 Mckayla Route, Port Kianfort, Burundi",
                            Birthday = new DateTime(1995, 6, 20, 18, 22, 30, 215, DateTimeKind.Utc).AddTicks(9021),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Victoria61@gmail.com",
                            FullName = "Mercedes Stokes",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "755-438-3441"
                        },
                        new
                        {
                            Id = 30,
                            Address = "851 Murray Corners, Noeliahaven, Malta",
                            Birthday = new DateTime(1977, 8, 13, 15, 37, 23, 805, DateTimeKind.Utc).AddTicks(9624),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Alexandre36@hotmail.com",
                            FullName = "Adelbert Cole",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "624-895-6278"
                        },
                        new
                        {
                            Id = 31,
                            Address = "865 Pauline Islands, Cronastad, Burkina Faso",
                            Birthday = new DateTime(1946, 8, 18, 18, 32, 52, 302, DateTimeKind.Utc).AddTicks(1301),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Gwen39@hotmail.com",
                            FullName = "Frederick Gutkowski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "840-461-8709"
                        },
                        new
                        {
                            Id = 32,
                            Address = "146 Hegmann Walk, Chloeview, Lebanon",
                            Birthday = new DateTime(1977, 10, 8, 14, 44, 9, 543, DateTimeKind.Utc).AddTicks(8267),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Clark_Cormier@yahoo.com",
                            FullName = "Virginia Schowalter",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "313-700-8719"
                        },
                        new
                        {
                            Id = 33,
                            Address = "936 Carroll Crest, West Kieraview, Saint Pierre and Miquelon",
                            Birthday = new DateTime(1967, 1, 26, 13, 20, 33, 91, DateTimeKind.Utc).AddTicks(7149),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "William0@hotmail.com",
                            FullName = "Ubaldo Marvin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "707-426-6665"
                        },
                        new
                        {
                            Id = 34,
                            Address = "932 Fatima Shoal, Lake Rhiannonshire, Timor-Leste",
                            Birthday = new DateTime(1997, 11, 25, 9, 12, 14, 231, DateTimeKind.Utc).AddTicks(11),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Lindsey84@hotmail.com",
                            FullName = "Destiny Wisozk",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "292-928-9244"
                        },
                        new
                        {
                            Id = 35,
                            Address = "720 Bennett Shore, West Selinamouth, Tonga",
                            Birthday = new DateTime(1973, 5, 6, 3, 3, 20, 333, DateTimeKind.Utc).AddTicks(8882),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Salma.Daniel17@gmail.com",
                            FullName = "Estella O'Keefe",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "519-754-8576"
                        },
                        new
                        {
                            Id = 36,
                            Address = "09911 Gaylord Parks, Sanfordton, Chad",
                            Birthday = new DateTime(1983, 4, 26, 20, 25, 22, 812, DateTimeKind.Utc).AddTicks(7976),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Prince54@hotmail.com",
                            FullName = "Rosemary Schmeler",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "524-353-5287"
                        },
                        new
                        {
                            Id = 37,
                            Address = "72190 Roob Square, East Sagebury, Tonga",
                            Birthday = new DateTime(1982, 6, 9, 16, 53, 28, 914, DateTimeKind.Utc).AddTicks(2491),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Beverly_Reinger29@gmail.com",
                            FullName = "Eleanora Hodkiewicz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "492-862-4604"
                        },
                        new
                        {
                            Id = 38,
                            Address = "07953 Lauryn Valley, Port Kieranville, Isle of Man",
                            Birthday = new DateTime(1992, 3, 21, 18, 27, 14, 50, DateTimeKind.Utc).AddTicks(6914),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Ole_Aufderhar@gmail.com",
                            FullName = "Sigmund Keebler",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "318-850-0730"
                        },
                        new
                        {
                            Id = 39,
                            Address = "26867 Beatty Mission, Metzside, Portugal",
                            Birthday = new DateTime(1972, 12, 26, 10, 9, 0, 846, DateTimeKind.Utc).AddTicks(1138),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Danyka39@hotmail.com",
                            FullName = "Lamont Hermiston",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "412-627-4971"
                        },
                        new
                        {
                            Id = 40,
                            Address = "1653 Asha Neck, Carolinaview, Svalbard & Jan Mayen Islands",
                            Birthday = new DateTime(1974, 3, 11, 23, 58, 9, 95, DateTimeKind.Utc).AddTicks(1291),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Pat51@hotmail.com",
                            FullName = "Dereck Halvorson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "810-889-6877"
                        },
                        new
                        {
                            Id = 41,
                            Address = "5420 Barton Haven, Parkerton, Moldova",
                            Birthday = new DateTime(1976, 11, 11, 10, 26, 10, 575, DateTimeKind.Utc).AddTicks(1574),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Greg_Rath41@hotmail.com",
                            FullName = "Modesto Cormier",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "644-735-3193"
                        },
                        new
                        {
                            Id = 42,
                            Address = "4521 Willms Forge, Kertzmannton, Burundi",
                            Birthday = new DateTime(1996, 9, 23, 20, 58, 58, 733, DateTimeKind.Utc).AddTicks(856),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Filomena12@yahoo.com",
                            FullName = "Toni Sauer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "936-370-1672"
                        },
                        new
                        {
                            Id = 43,
                            Address = "771 Koch Brook, West Haleyburgh, Mauritius",
                            Birthday = new DateTime(1990, 1, 4, 7, 11, 25, 762, DateTimeKind.Utc).AddTicks(9366),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Filiberto97@yahoo.com",
                            FullName = "Diana Hilll",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "910-762-9981"
                        },
                        new
                        {
                            Id = 44,
                            Address = "264 Parker Falls, Gwendolynton, Thailand",
                            Birthday = new DateTime(1969, 12, 14, 2, 42, 32, 919, DateTimeKind.Utc).AddTicks(7386),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Adolf_Bernhard@hotmail.com",
                            FullName = "Quinn Schinner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "872-526-5821"
                        },
                        new
                        {
                            Id = 45,
                            Address = "49511 Joelle Lock, Lamarbury, Mongolia",
                            Birthday = new DateTime(1968, 3, 11, 23, 7, 51, 843, DateTimeKind.Utc).AddTicks(9357),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Javonte85@gmail.com",
                            FullName = "Audra Smitham",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "533-306-5814"
                        },
                        new
                        {
                            Id = 46,
                            Address = "035 Berge Lock, Port Kyleefurt, Swaziland",
                            Birthday = new DateTime(1997, 2, 23, 11, 28, 48, 441, DateTimeKind.Utc).AddTicks(7087),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Marion32@hotmail.com",
                            FullName = "Vada Lang",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "524-976-0478"
                        },
                        new
                        {
                            Id = 47,
                            Address = "05845 Cornell Plains, Odessabury, Monaco",
                            Birthday = new DateTime(1959, 9, 16, 12, 44, 12, 833, DateTimeKind.Utc).AddTicks(4047),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Vidal_Sanford88@yahoo.com",
                            FullName = "Armand Kertzmann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "261-628-4365"
                        },
                        new
                        {
                            Id = 48,
                            Address = "265 Percy Unions, Port Shannon, Canada",
                            Birthday = new DateTime(1976, 8, 4, 3, 14, 33, 154, DateTimeKind.Utc).AddTicks(293),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Blanche.Torp@gmail.com",
                            FullName = "Maryam Adams",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "925-966-4032"
                        },
                        new
                        {
                            Id = 49,
                            Address = "72704 Noemi Summit, East Johathan, Chad",
                            Birthday = new DateTime(1966, 3, 2, 5, 40, 53, 108, DateTimeKind.Utc).AddTicks(8858),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Marisol_Feeney85@yahoo.com",
                            FullName = "Bernard Kshlerin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "377-691-8389"
                        },
                        new
                        {
                            Id = 50,
                            Address = "23674 Casper River, Maximeshire, Aruba",
                            Birthday = new DateTime(1975, 6, 15, 1, 7, 53, 320, DateTimeKind.Utc).AddTicks(9023),
                            CreatedDate = new DateTime(2022, 6, 13, 6, 42, 3, 350, DateTimeKind.Utc).AddTicks(9084),
                            Email = "Velda52@gmail.com",
                            FullName = "Gloria Keeling",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "654-630-8543"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2011c37b-9e4b-4c0b-8e0f-73105ee5e864",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsDel = 0,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEPTV0SRfUjgMBFS6P9VxA0pzpeh16kYhkS/2KeM4Nw+qnLFTVF7f/iWAN9iV3DTGAA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8ca52c02-cc5a-4310-bed7-ebbbbc8c0e34",
                            Status = 0,
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("BusCheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BusCheduleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,1)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("credit");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHis");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedDate = new DateTime(2022, 6, 13, 13, 42, 3, 296, DateTimeKind.Local).AddTicks(9055),
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TimeSchedule", "TimeSchedule")
                        .WithMany()
                        .HasForeignKey("TimeScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.HasOne("BusSystem.Entity.BusSchedule", "BusSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("BusCheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TransactionHis", "TransactionHis")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusSchedule");

                    b.Navigation("Customer");

                    b.Navigation("TransactionHis");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithOne("Ticket")
                        .HasForeignKey("BusSystem.Entity.Ticket", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Schedule", "Schedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany("TransactionHis")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BusSystem.Entity.Wallet", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Navigation("TransactionHis");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Navigation("TimeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
