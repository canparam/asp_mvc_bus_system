// <auto-generated />
using System;
using BusSystem.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusSystem.Data.Migrations
{
    [DbContext(typeof(BusSystemDbContext))]
    [Migration("20220612050523_v2.120")]
    partial class v2120
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusSystem.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<decimal>("PriceTicket")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimeScheduleId");

                    b.ToTable("BusSchedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "397 Tillman Rapids, Gaylordview, Iran",
                            Birthday = new DateTime(1986, 12, 5, 8, 18, 34, 267, DateTimeKind.Utc).AddTicks(5170),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Olen_Hansen@hotmail.com",
                            FullName = "Cloyd Ward",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "983-420-6070"
                        },
                        new
                        {
                            Id = 2,
                            Address = "92769 Kutch Place, West Jerrold, Isle of Man",
                            Birthday = new DateTime(1973, 7, 23, 7, 0, 32, 998, DateTimeKind.Utc).AddTicks(9122),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Colton2@yahoo.com",
                            FullName = "Lamont Reinger",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "539-913-4826"
                        },
                        new
                        {
                            Id = 3,
                            Address = "72716 Greta Squares, Bergstrommouth, Jersey",
                            Birthday = new DateTime(1955, 4, 16, 14, 3, 29, 920, DateTimeKind.Utc).AddTicks(5200),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Jeanette.Fay80@hotmail.com",
                            FullName = "Manley Tromp",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "626-463-2544"
                        },
                        new
                        {
                            Id = 4,
                            Address = "54049 Hazel Courts, Araceliborough, Chad",
                            Birthday = new DateTime(1963, 8, 11, 2, 34, 54, 766, DateTimeKind.Utc).AddTicks(1102),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Lavern84@yahoo.com",
                            FullName = "Waino Fisher",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "467-277-1402"
                        },
                        new
                        {
                            Id = 5,
                            Address = "436 Earl Knoll, West Glenna, Nigeria",
                            Birthday = new DateTime(1967, 10, 13, 16, 35, 9, 353, DateTimeKind.Utc).AddTicks(1753),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Emilia_Kunze93@gmail.com",
                            FullName = "Maxine Denesik",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "219-545-6734"
                        },
                        new
                        {
                            Id = 6,
                            Address = "93119 Crooks Mill, South Addie, Peru",
                            Birthday = new DateTime(1945, 8, 11, 9, 26, 33, 513, DateTimeKind.Utc).AddTicks(2297),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Jessica_Kihn@gmail.com",
                            FullName = "Zackary Bayer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "467-478-7777"
                        },
                        new
                        {
                            Id = 7,
                            Address = "08525 Hortense Center, Coletown, Panama",
                            Birthday = new DateTime(1948, 7, 26, 20, 32, 5, 874, DateTimeKind.Utc).AddTicks(8287),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Katrina91@hotmail.com",
                            FullName = "Aileen Douglas",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "878-457-3626"
                        },
                        new
                        {
                            Id = 8,
                            Address = "50461 Nolan Locks, Lake Keeley, Lao People's Democratic Republic",
                            Birthday = new DateTime(1960, 3, 24, 1, 24, 22, 778, DateTimeKind.Utc).AddTicks(4910),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Verdie16@gmail.com",
                            FullName = "Hassan Keeling",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "641-254-8262"
                        },
                        new
                        {
                            Id = 9,
                            Address = "1304 Robyn Prairie, Grantfurt, Sudan",
                            Birthday = new DateTime(1947, 5, 3, 13, 19, 26, 108, DateTimeKind.Utc).AddTicks(6101),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Beulah65@gmail.com",
                            FullName = "Donna Nitzsche",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "429-587-8207"
                        },
                        new
                        {
                            Id = 10,
                            Address = "294 Mueller Fields, Metzville, Palau",
                            Birthday = new DateTime(1958, 8, 9, 12, 49, 13, 473, DateTimeKind.Utc).AddTicks(4428),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Miracle.Haag@hotmail.com",
                            FullName = "Pauline Rosenbaum",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "745-391-8430"
                        },
                        new
                        {
                            Id = 11,
                            Address = "80308 Abshire Track, Lake Sashachester, Estonia",
                            Birthday = new DateTime(1970, 6, 2, 8, 29, 36, 640, DateTimeKind.Utc).AddTicks(2249),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Abdiel_Bergstrom@gmail.com",
                            FullName = "Pauline Weber",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "953-989-6779"
                        },
                        new
                        {
                            Id = 12,
                            Address = "98221 Wuckert Shores, Binsstad, Palau",
                            Birthday = new DateTime(1991, 6, 22, 19, 43, 43, 719, DateTimeKind.Utc).AddTicks(2091),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Esperanza_Grimes@hotmail.com",
                            FullName = "Rubye Oberbrunner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "342-416-9946"
                        },
                        new
                        {
                            Id = 13,
                            Address = "53013 Hilario Islands, Lake Bert, Lesotho",
                            Birthday = new DateTime(1959, 1, 5, 15, 22, 9, 432, DateTimeKind.Utc).AddTicks(4810),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Marlen.Parker@gmail.com",
                            FullName = "Destin Ward",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "645-885-8099"
                        },
                        new
                        {
                            Id = 14,
                            Address = "757 Jacobi Ports, Hansenfort, Tunisia",
                            Birthday = new DateTime(1952, 9, 24, 16, 25, 44, 673, DateTimeKind.Utc).AddTicks(4491),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Cielo_Nader24@yahoo.com",
                            FullName = "Polly Nikolaus",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "873-347-4577"
                        },
                        new
                        {
                            Id = 15,
                            Address = "7358 Ullrich Dam, New Kieranville, Barbados",
                            Birthday = new DateTime(1973, 8, 30, 2, 25, 48, 680, DateTimeKind.Utc).AddTicks(2551),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Danielle19@hotmail.com",
                            FullName = "Easton Bogisich",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "304-705-3622"
                        },
                        new
                        {
                            Id = 16,
                            Address = "70952 Huel Club, New Keon, Comoros",
                            Birthday = new DateTime(1992, 8, 25, 5, 38, 23, 824, DateTimeKind.Utc).AddTicks(4063),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Demond36@yahoo.com",
                            FullName = "Ora Adams",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "695-243-8637"
                        },
                        new
                        {
                            Id = 17,
                            Address = "1643 Wintheiser Mill, New Stacy, Guam",
                            Birthday = new DateTime(1981, 1, 25, 13, 50, 12, 361, DateTimeKind.Utc).AddTicks(4309),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Simeon38@hotmail.com",
                            FullName = "Eriberto O'Keefe",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "544-953-0979"
                        },
                        new
                        {
                            Id = 18,
                            Address = "228 Grady Viaduct, North Romanshire, Cyprus",
                            Birthday = new DateTime(1977, 10, 22, 8, 35, 28, 264, DateTimeKind.Utc).AddTicks(6014),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Cecilia_Boyle@gmail.com",
                            FullName = "Henriette MacGyver",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "338-479-1364"
                        },
                        new
                        {
                            Id = 19,
                            Address = "619 Shanahan Vista, Bradyville, Egypt",
                            Birthday = new DateTime(1981, 8, 6, 4, 34, 47, 427, DateTimeKind.Utc).AddTicks(5147),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Hipolito27@gmail.com",
                            FullName = "Cristobal Towne",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "920-812-4093"
                        },
                        new
                        {
                            Id = 20,
                            Address = "0460 Effertz Glens, Yeseniamouth, Finland",
                            Birthday = new DateTime(1997, 1, 17, 1, 27, 48, 508, DateTimeKind.Utc).AddTicks(577),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Augusta_Koelpin@gmail.com",
                            FullName = "Orpha Stehr",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "935-446-5753"
                        },
                        new
                        {
                            Id = 21,
                            Address = "31747 Lowe Spur, East Francisco, Solomon Islands",
                            Birthday = new DateTime(1964, 3, 9, 19, 59, 43, 606, DateTimeKind.Utc).AddTicks(711),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Americo_Beahan@hotmail.com",
                            FullName = "Samir Pfeffer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "485-818-5572"
                        },
                        new
                        {
                            Id = 22,
                            Address = "537 Henriette Mills, Port Berenice, Bosnia and Herzegovina",
                            Birthday = new DateTime(1955, 2, 16, 17, 4, 34, 602, DateTimeKind.Utc).AddTicks(8601),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Cortney_McKenzie72@gmail.com",
                            FullName = "Walker Goldner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "523-992-2398"
                        },
                        new
                        {
                            Id = 23,
                            Address = "522 Abel Mountains, New Linnie, Grenada",
                            Birthday = new DateTime(1976, 12, 21, 18, 12, 47, 486, DateTimeKind.Utc).AddTicks(8203),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Paige60@hotmail.com",
                            FullName = "Leila Bauch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "995-653-9421"
                        },
                        new
                        {
                            Id = 24,
                            Address = "261 Schuppe Village, Yoshikochester, Nepal",
                            Birthday = new DateTime(1989, 5, 7, 19, 27, 59, 696, DateTimeKind.Utc).AddTicks(9310),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Eudora.Towne46@hotmail.com",
                            FullName = "Donavon Fahey",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "639-401-6380"
                        },
                        new
                        {
                            Id = 25,
                            Address = "667 Daphnee Rest, North Samantha, Ukraine",
                            Birthday = new DateTime(1948, 8, 9, 16, 44, 44, 113, DateTimeKind.Utc).AddTicks(6697),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Eleonore_Gislason8@hotmail.com",
                            FullName = "Arlene Hammes",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "677-290-0662"
                        },
                        new
                        {
                            Id = 26,
                            Address = "9562 O'Keefe Rapid, South Will, Honduras",
                            Birthday = new DateTime(1977, 3, 16, 3, 49, 5, 730, DateTimeKind.Utc).AddTicks(1325),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Walter.Cruickshank61@yahoo.com",
                            FullName = "Zakary Rau",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "952-931-3169"
                        },
                        new
                        {
                            Id = 27,
                            Address = "2621 Harvey Forks, Lake Domenico, Montserrat",
                            Birthday = new DateTime(1961, 1, 23, 19, 10, 16, 274, DateTimeKind.Utc).AddTicks(9768),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Ivory50@yahoo.com",
                            FullName = "Tyree Krajcik",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "837-910-3256"
                        },
                        new
                        {
                            Id = 28,
                            Address = "70792 Kuhlman Way, South Leathaton, Estonia",
                            Birthday = new DateTime(1963, 11, 4, 4, 48, 55, 771, DateTimeKind.Utc).AddTicks(5468),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Pamela_Tremblay@yahoo.com",
                            FullName = "Hellen Ziemann",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "551-265-2891"
                        },
                        new
                        {
                            Id = 29,
                            Address = "3753 Morissette Ford, Madysonmouth, Tanzania",
                            Birthday = new DateTime(1993, 3, 21, 11, 26, 47, 135, DateTimeKind.Utc).AddTicks(5659),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Pattie_Reichert@gmail.com",
                            FullName = "Leonor Pollich",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "847-924-3318"
                        },
                        new
                        {
                            Id = 30,
                            Address = "3043 Goodwin Mews, Port Davinside, Ireland",
                            Birthday = new DateTime(1957, 11, 23, 3, 48, 1, 543, DateTimeKind.Utc).AddTicks(1336),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Heloise.Kirlin@gmail.com",
                            FullName = "Rosemarie Baumbach",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "487-598-6280"
                        },
                        new
                        {
                            Id = 31,
                            Address = "9546 Gottlieb Circle, West Landenside, Central African Republic",
                            Birthday = new DateTime(1953, 12, 4, 2, 59, 12, 509, DateTimeKind.Utc).AddTicks(3552),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Loy_Considine32@hotmail.com",
                            FullName = "Kassandra Rippin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "776-803-6685"
                        },
                        new
                        {
                            Id = 32,
                            Address = "158 Salvatore Mill, South Anseltown, Equatorial Guinea",
                            Birthday = new DateTime(1954, 3, 11, 6, 57, 10, 761, DateTimeKind.Utc).AddTicks(2885),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Wilson_Stanton@hotmail.com",
                            FullName = "Frederick Mosciski",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "247-878-6059"
                        },
                        new
                        {
                            Id = 33,
                            Address = "491 Reichel Light, Kihnhaven, French Southern Territories",
                            Birthday = new DateTime(1990, 11, 21, 19, 3, 56, 726, DateTimeKind.Utc).AddTicks(8607),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Marcus58@hotmail.com",
                            FullName = "Reagan Schmitt",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "728-828-8960"
                        },
                        new
                        {
                            Id = 34,
                            Address = "021 Maribel Knolls, New Serena, Isle of Man",
                            Birthday = new DateTime(1960, 6, 23, 12, 42, 24, 675, DateTimeKind.Utc).AddTicks(2587),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Tracey.Brakus@yahoo.com",
                            FullName = "Shakira Cassin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "389-320-5861"
                        },
                        new
                        {
                            Id = 35,
                            Address = "905 Russell Mills, New Benjamin, Bangladesh",
                            Birthday = new DateTime(1989, 3, 6, 23, 49, 43, 630, DateTimeKind.Utc).AddTicks(6861),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Terrill67@gmail.com",
                            FullName = "Stephanie Kuphal",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "836-786-2961"
                        },
                        new
                        {
                            Id = 36,
                            Address = "91819 Rickey Summit, North Orlandmouth, Bouvet Island (Bouvetoya)",
                            Birthday = new DateTime(1958, 1, 24, 21, 38, 45, 706, DateTimeKind.Utc).AddTicks(359),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Brandyn_Brakus@hotmail.com",
                            FullName = "Cecile McGlynn",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "211-400-6552"
                        },
                        new
                        {
                            Id = 37,
                            Address = "29725 Steuber Landing, Rathborough, Svalbard & Jan Mayen Islands",
                            Birthday = new DateTime(1986, 8, 29, 21, 43, 43, 706, DateTimeKind.Utc).AddTicks(9356),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Joany.Fay@yahoo.com",
                            FullName = "Tania Hodkiewicz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "648-806-7852"
                        },
                        new
                        {
                            Id = 38,
                            Address = "9381 Gino Crest, Kshlerinview, Indonesia",
                            Birthday = new DateTime(1976, 1, 16, 2, 24, 42, 106, DateTimeKind.Utc).AddTicks(2894),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Demarcus7@hotmail.com",
                            FullName = "Korbin Prohaska",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "488-787-1875"
                        },
                        new
                        {
                            Id = 39,
                            Address = "794 Libby Rapids, Theronchester, Vanuatu",
                            Birthday = new DateTime(1968, 2, 18, 21, 54, 44, 271, DateTimeKind.Utc).AddTicks(8571),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Velda_Johns@yahoo.com",
                            FullName = "Blaise Corwin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "542-229-2826"
                        },
                        new
                        {
                            Id = 40,
                            Address = "4281 Orland Neck, Port Mallory, Latvia",
                            Birthday = new DateTime(1980, 12, 22, 7, 33, 12, 10, DateTimeKind.Utc).AddTicks(2106),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Samara_Ferry@gmail.com",
                            FullName = "Waldo Botsford",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "780-406-7723"
                        },
                        new
                        {
                            Id = 41,
                            Address = "9884 Fay Island, New Oletatown, Croatia",
                            Birthday = new DateTime(1955, 1, 26, 18, 10, 24, 155, DateTimeKind.Utc).AddTicks(6832),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Scarlett_Wilkinson@hotmail.com",
                            FullName = "Shannon Kutch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "828-873-9187"
                        },
                        new
                        {
                            Id = 42,
                            Address = "069 Feeney Ways, New Ferne, Malta",
                            Birthday = new DateTime(1970, 11, 28, 22, 1, 3, 841, DateTimeKind.Utc).AddTicks(8668),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Ahmed_Schultz82@gmail.com",
                            FullName = "Abe Kutch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "436-942-6609"
                        },
                        new
                        {
                            Id = 43,
                            Address = "65782 Kailey Brooks, East Destany, Japan",
                            Birthday = new DateTime(1963, 12, 31, 18, 27, 53, 155, DateTimeKind.Utc).AddTicks(5977),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Magnus27@gmail.com",
                            FullName = "Merlin Anderson",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "875-993-0034"
                        },
                        new
                        {
                            Id = 44,
                            Address = "5912 Herman Inlet, Port Virginieview, Cape Verde",
                            Birthday = new DateTime(1980, 3, 12, 16, 29, 19, 862, DateTimeKind.Utc).AddTicks(3954),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Kaitlin_Huel83@gmail.com",
                            FullName = "Lester Veum",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "574-366-6554"
                        },
                        new
                        {
                            Id = 45,
                            Address = "9129 Russel Haven, New Verdiemouth, Belgium",
                            Birthday = new DateTime(1958, 10, 20, 9, 14, 48, 674, DateTimeKind.Utc).AddTicks(6272),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Alfonso.Kuhic85@hotmail.com",
                            FullName = "Gwen Padberg",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "249-496-9266"
                        },
                        new
                        {
                            Id = 46,
                            Address = "248 Rau Gateway, Port Hailey, Liberia",
                            Birthday = new DateTime(1958, 1, 14, 3, 41, 24, 50, DateTimeKind.Utc).AddTicks(6177),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Korey_Steuber8@hotmail.com",
                            FullName = "Pink McLaughlin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "585-912-8422"
                        },
                        new
                        {
                            Id = 47,
                            Address = "027 Jennie Falls, South Lourdes, Hong Kong",
                            Birthday = new DateTime(1992, 1, 31, 1, 14, 58, 118, DateTimeKind.Utc).AddTicks(8088),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Timothy11@hotmail.com",
                            FullName = "Zula Heathcote",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "215-636-4354"
                        },
                        new
                        {
                            Id = 48,
                            Address = "6413 Joyce Center, Marvinmouth, Solomon Islands",
                            Birthday = new DateTime(2002, 11, 17, 21, 50, 0, 557, DateTimeKind.Utc).AddTicks(5646),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Hilton.Haag@gmail.com",
                            FullName = "Ivah Schimmel",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "711-342-7570"
                        },
                        new
                        {
                            Id = 49,
                            Address = "96727 Crawford Bridge, Lake Dimitriside, Guernsey",
                            Birthday = new DateTime(1957, 10, 14, 2, 29, 24, 278, DateTimeKind.Utc).AddTicks(559),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Favian17@gmail.com",
                            FullName = "Roma Lowe",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "261-849-2316"
                        },
                        new
                        {
                            Id = 50,
                            Address = "256 Evalyn Station, Andersonside, Brunei Darussalam",
                            Birthday = new DateTime(1981, 10, 5, 19, 59, 29, 159, DateTimeKind.Utc).AddTicks(2969),
                            CreatedDate = new DateTime(2022, 6, 12, 5, 5, 22, 905, DateTimeKind.Utc).AddTicks(3678),
                            Email = "Kamille.Strosin36@hotmail.com",
                            FullName = "Carlie Lesch",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "936-858-0593"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7e97cf3f-9b3c-4559-9127-d63b8cd99c90",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsDel = 0,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAELE0y0XqUU8SqJj0kzFlP+rHF6rfr0+m97abWJzb46Bwiky5z3gjdLt6Xq7kDaCTgA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a8a431c9-fb1c-4dd7-bb70-86f92bbbf229",
                            Status = 0,
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("BusCheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,1)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BusCheduleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,1)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("credit");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHis");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedDate = new DateTime(2022, 6, 12, 12, 5, 22, 851, DateTimeKind.Local).AddTicks(7876),
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TimeSchedule", "TimeSchedule")
                        .WithMany()
                        .HasForeignKey("TimeScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.HasOne("BusSystem.Entity.BusSchedule", "BusSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("BusCheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusSchedule");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.OrderDetail", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithOne("Ticket")
                        .HasForeignKey("BusSystem.Entity.Ticket", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Schedule", "Schedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany("TransactionHis")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BusSystem.Entity.Wallet", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Navigation("TransactionHis");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Navigation("TimeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
