// <auto-generated />
using System;
using BusSystem.Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusSystem.Data.Migrations
{
    [DbContext(typeof(BusSystemDbContext))]
    [Migration("20220609101718_v2.3")]
    partial class v23
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusSystem.Entity.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<decimal>("PriceTicket")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimeScheduleId");

                    b.ToTable("BusSchedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "843 Neoma Way, Maverickhaven, United States Minor Outlying Islands",
                            Birthday = new DateTime(1969, 9, 30, 3, 52, 52, 97, DateTimeKind.Utc).AddTicks(3815),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Hiram_Goldner16@gmail.com",
                            FullName = "Genoveva Lueilwitz",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "230.417.8188 x4321"
                        },
                        new
                        {
                            Id = 2,
                            Address = "8726 Minerva Plains, Bergstromfurt, French Polynesia",
                            Birthday = new DateTime(1979, 5, 23, 22, 29, 44, 765, DateTimeKind.Utc).AddTicks(7524),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Emmett_Schulist@yahoo.com",
                            FullName = "Mollie Rau",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-562-202-4725 x6457"
                        },
                        new
                        {
                            Id = 3,
                            Address = "1436 Colleen Manors, Lake Horaceburgh, British Indian Ocean Territory (Chagos Archipelago)",
                            Birthday = new DateTime(1975, 2, 24, 14, 27, 58, 956, DateTimeKind.Utc).AddTicks(9056),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Larue95@hotmail.com",
                            FullName = "Derick Greenfelder",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "233-709-0150"
                        },
                        new
                        {
                            Id = 4,
                            Address = "236 Imani Harbors, New Theo, Jordan",
                            Birthday = new DateTime(2003, 7, 5, 5, 55, 52, 878, DateTimeKind.Utc).AddTicks(1118),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Brandyn87@yahoo.com",
                            FullName = "Kurtis Crooks",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "523.488.8413 x100"
                        },
                        new
                        {
                            Id = 5,
                            Address = "78374 Dannie Gardens, Schuylerbury, Niue",
                            Birthday = new DateTime(1953, 7, 2, 19, 4, 48, 822, DateTimeKind.Utc).AddTicks(7727),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Bria.Reilly@gmail.com",
                            FullName = "Destiney Goldner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(256) 648-1216 x81749"
                        },
                        new
                        {
                            Id = 6,
                            Address = "809 Wiegand Meadows, Lake Erica, Honduras",
                            Birthday = new DateTime(2001, 9, 7, 19, 5, 31, 260, DateTimeKind.Utc).AddTicks(1834),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Laverna_Crona@gmail.com",
                            FullName = "Trudie Sanford",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "679.671.6886 x619"
                        },
                        new
                        {
                            Id = 7,
                            Address = "746 Vandervort Pike, North Ricofort, Bangladesh",
                            Birthday = new DateTime(1986, 11, 7, 16, 24, 58, 0, DateTimeKind.Utc).AddTicks(6925),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Alexanne.Hartmann@gmail.com",
                            FullName = "Anjali Hermiston",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "388.888.0128"
                        },
                        new
                        {
                            Id = 8,
                            Address = "528 Shawn Port, Port Mohammadhaven, Tunisia",
                            Birthday = new DateTime(1985, 1, 1, 4, 0, 40, 467, DateTimeKind.Utc).AddTicks(4230),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Juliana.Ondricka@yahoo.com",
                            FullName = "Kennedi Johns",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "623.786.1762 x325"
                        },
                        new
                        {
                            Id = 9,
                            Address = "35310 Giovanny Street, Watsicaport, French Guiana",
                            Birthday = new DateTime(1972, 2, 6, 11, 47, 27, 309, DateTimeKind.Utc).AddTicks(1512),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "London_Lemke64@yahoo.com",
                            FullName = "Hassie Kuphal",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(993) 951-7643 x481"
                        },
                        new
                        {
                            Id = 10,
                            Address = "0297 Winnifred Island, Imaland, Saint Barthelemy",
                            Birthday = new DateTime(1960, 7, 19, 11, 43, 15, 991, DateTimeKind.Utc).AddTicks(2046),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Kale_Lesch22@hotmail.com",
                            FullName = "Heidi Hamill",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "573.555.5546"
                        },
                        new
                        {
                            Id = 11,
                            Address = "2460 Marjolaine Turnpike, Lake Barontown, Armenia",
                            Birthday = new DateTime(1951, 5, 16, 22, 6, 34, 965, DateTimeKind.Utc).AddTicks(3770),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Rosa.Williamson19@hotmail.com",
                            FullName = "Billy Carroll",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "855.284.6439 x30536"
                        },
                        new
                        {
                            Id = 12,
                            Address = "6634 Haley Extension, Piperchester, Lao People's Democratic Republic",
                            Birthday = new DateTime(1963, 7, 6, 15, 41, 42, 363, DateTimeKind.Utc).AddTicks(9091),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Theresia.Funk@hotmail.com",
                            FullName = "Rubye Nienow",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "490.569.8705"
                        },
                        new
                        {
                            Id = 13,
                            Address = "66382 Rose Points, Lake Rasheed, Papua New Guinea",
                            Birthday = new DateTime(1955, 3, 16, 12, 9, 12, 450, DateTimeKind.Utc).AddTicks(5069),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Jeanie81@gmail.com",
                            FullName = "Julian D'Amore",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "704.456.2883 x916"
                        },
                        new
                        {
                            Id = 14,
                            Address = "630 Lea Turnpike, East Davonside, Bosnia and Herzegovina",
                            Birthday = new DateTime(1972, 9, 23, 0, 23, 3, 285, DateTimeKind.Utc).AddTicks(5592),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Tabitha_Flatley29@gmail.com",
                            FullName = "Mireya Crona",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "419.535.9836 x19604"
                        },
                        new
                        {
                            Id = 15,
                            Address = "227 Daphney Wall, West Lavernview, Qatar",
                            Birthday = new DateTime(1977, 11, 12, 19, 8, 11, 755, DateTimeKind.Utc).AddTicks(6149),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Hermann_Cummerata15@gmail.com",
                            FullName = "Rachel Pacocha",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "632-375-0945 x7157"
                        },
                        new
                        {
                            Id = 16,
                            Address = "2133 Sandra Fords, Clemmieland, Mali",
                            Birthday = new DateTime(1974, 8, 27, 12, 17, 55, 722, DateTimeKind.Utc).AddTicks(2170),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Tavares38@gmail.com",
                            FullName = "Mckayla Veum",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-226-927-7883 x1635"
                        },
                        new
                        {
                            Id = 17,
                            Address = "99038 Emmett Walks, Port Ivory, Tanzania",
                            Birthday = new DateTime(1977, 6, 3, 21, 30, 45, 605, DateTimeKind.Utc).AddTicks(8274),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Gregorio_Wunsch9@yahoo.com",
                            FullName = "Guadalupe Morissette",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-743-550-5580 x045"
                        },
                        new
                        {
                            Id = 18,
                            Address = "233 Andreane Divide, Hermannside, Turkey",
                            Birthday = new DateTime(1966, 11, 9, 20, 44, 35, 456, DateTimeKind.Utc).AddTicks(6411),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Ewell_Nolan@gmail.com",
                            FullName = "Fredrick O'Hara",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(785) 949-5804 x80308"
                        },
                        new
                        {
                            Id = 19,
                            Address = "170 Gislason Highway, Ashleighhaven, Finland",
                            Birthday = new DateTime(1975, 5, 14, 14, 57, 10, 712, DateTimeKind.Utc).AddTicks(5041),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Jennifer_Waelchi@yahoo.com",
                            FullName = "Estel Feil",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-361-354-2993 x5879"
                        },
                        new
                        {
                            Id = 20,
                            Address = "1578 Gutmann Skyway, Katlynstad, American Samoa",
                            Birthday = new DateTime(1982, 8, 2, 7, 54, 8, 584, DateTimeKind.Utc).AddTicks(8900),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "May9@gmail.com",
                            FullName = "Bernhard Stanton",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(238) 602-8602"
                        },
                        new
                        {
                            Id = 21,
                            Address = "4916 Hane Centers, Heaneyhaven, Thailand",
                            Birthday = new DateTime(1963, 10, 10, 18, 36, 16, 478, DateTimeKind.Utc).AddTicks(8296),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Katelynn.Gibson61@hotmail.com",
                            FullName = "Brandon Hilll",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "222-772-5286 x55124"
                        },
                        new
                        {
                            Id = 22,
                            Address = "224 Verda Loop, Hyattborough, Eritrea",
                            Birthday = new DateTime(1978, 12, 11, 7, 48, 25, 968, DateTimeKind.Utc).AddTicks(6079),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Oran.Langosh@gmail.com",
                            FullName = "Muhammad Ruecker",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "422-248-7273 x64484"
                        },
                        new
                        {
                            Id = 23,
                            Address = "888 Larson Burgs, North Ignatiusview, Sao Tome and Principe",
                            Birthday = new DateTime(2000, 10, 27, 10, 4, 27, 976, DateTimeKind.Utc).AddTicks(7908),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Salvatore_Ortiz@yahoo.com",
                            FullName = "Damaris MacGyver",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-717-794-1298"
                        },
                        new
                        {
                            Id = 24,
                            Address = "23243 Marcella Springs, Lake Eliseofort, Afghanistan",
                            Birthday = new DateTime(1989, 1, 15, 1, 18, 30, 438, DateTimeKind.Utc).AddTicks(2929),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Leon_Ruecker@gmail.com",
                            FullName = "Isaiah Walter",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(878) 755-6593 x55450"
                        },
                        new
                        {
                            Id = 25,
                            Address = "42414 Russell Inlet, Donnellyburgh, British Indian Ocean Territory (Chagos Archipelago)",
                            Birthday = new DateTime(2003, 9, 24, 18, 58, 16, 642, DateTimeKind.Utc).AddTicks(8357),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Brad90@gmail.com",
                            FullName = "Webster Borer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-769-748-2734 x20533"
                        },
                        new
                        {
                            Id = 26,
                            Address = "17352 Haylee Keys, Gladyceburgh, Congo",
                            Birthday = new DateTime(1963, 3, 16, 19, 34, 5, 372, DateTimeKind.Utc).AddTicks(6723),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Carmella81@gmail.com",
                            FullName = "Gennaro Balistreri",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-906-670-6177 x67080"
                        },
                        new
                        {
                            Id = 27,
                            Address = "6630 Lueilwitz Trace, South Adellborough, Saint Lucia",
                            Birthday = new DateTime(1999, 12, 28, 6, 24, 47, 264, DateTimeKind.Utc).AddTicks(9521),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Ashton.Moen@yahoo.com",
                            FullName = "Herminia Larkin",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "612.284.9623 x6662"
                        },
                        new
                        {
                            Id = 28,
                            Address = "77014 Hilpert Forest, Lynchville, Albania",
                            Birthday = new DateTime(1988, 5, 2, 9, 43, 50, 750, DateTimeKind.Utc).AddTicks(9532),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Zackary_Rice66@yahoo.com",
                            FullName = "Marguerite Zulauf",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-277-389-9374"
                        },
                        new
                        {
                            Id = 29,
                            Address = "8301 Berge Mountains, South General, Republic of Korea",
                            Birthday = new DateTime(1992, 1, 26, 18, 48, 28, 390, DateTimeKind.Utc).AddTicks(5653),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Cordelia_OHara14@gmail.com",
                            FullName = "Grayson MacGyver",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-266-958-8177"
                        },
                        new
                        {
                            Id = 30,
                            Address = "18251 O'Hara Viaduct, Nelleborough, Faroe Islands",
                            Birthday = new DateTime(1965, 10, 22, 12, 0, 15, 352, DateTimeKind.Utc).AddTicks(8144),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Myron_Rau25@hotmail.com",
                            FullName = "Josh Crona",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "604-600-4946"
                        },
                        new
                        {
                            Id = 31,
                            Address = "779 Kayley Roads, Walkerburgh, Turkmenistan",
                            Birthday = new DateTime(1987, 12, 25, 22, 20, 1, 791, DateTimeKind.Utc).AddTicks(1491),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Dane.Abshire@gmail.com",
                            FullName = "Vincent Ernser",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-636-905-5187 x57071"
                        },
                        new
                        {
                            Id = 32,
                            Address = "34631 Bradtke Drives, Lake Providenciview, Morocco",
                            Birthday = new DateTime(1981, 11, 21, 21, 45, 30, 510, DateTimeKind.Utc).AddTicks(5175),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Faustino.Hammes@hotmail.com",
                            FullName = "Hertha Roberts",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(959) 311-1211"
                        },
                        new
                        {
                            Id = 33,
                            Address = "59973 Rahul Lights, West Abbey, Germany",
                            Birthday = new DateTime(1944, 8, 22, 17, 9, 26, 395, DateTimeKind.Utc).AddTicks(1873),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Emerson_Kessler52@yahoo.com",
                            FullName = "Pierre Kub",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "352-812-5100"
                        },
                        new
                        {
                            Id = 34,
                            Address = "7525 Tiffany Union, Sammyville, Tuvalu",
                            Birthday = new DateTime(1954, 1, 11, 2, 44, 30, 152, DateTimeKind.Utc).AddTicks(1110),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Otho.Turner82@gmail.com",
                            FullName = "Adolf Hammes",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "422.213.6463 x33635"
                        },
                        new
                        {
                            Id = 35,
                            Address = "59333 Ellie Prairie, Lake Daisyborough, Peru",
                            Birthday = new DateTime(1993, 3, 31, 22, 5, 53, 697, DateTimeKind.Utc).AddTicks(2332),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Loy67@yahoo.com",
                            FullName = "Alice Howell",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-479-925-8245 x7512"
                        },
                        new
                        {
                            Id = 36,
                            Address = "0473 Shannon Trace, Naderland, Gambia",
                            Birthday = new DateTime(1959, 9, 13, 21, 36, 34, 940, DateTimeKind.Utc).AddTicks(3882),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Tyreek_Ratke54@gmail.com",
                            FullName = "General O'Conner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-735-408-5071 x487"
                        },
                        new
                        {
                            Id = 37,
                            Address = "052 Greenfelder Knoll, Pfefferside, Poland",
                            Birthday = new DateTime(1981, 12, 14, 20, 27, 44, 134, DateTimeKind.Utc).AddTicks(7711),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Preston_Herman@hotmail.com",
                            FullName = "Abraham Wiegand",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-993-371-9767"
                        },
                        new
                        {
                            Id = 38,
                            Address = "941 Clarissa Valley, East Aaron, Kyrgyz Republic",
                            Birthday = new DateTime(1954, 5, 4, 16, 48, 12, 504, DateTimeKind.Utc).AddTicks(2385),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Casper90@gmail.com",
                            FullName = "Cindy Heidenreich",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "961-987-4014 x38473"
                        },
                        new
                        {
                            Id = 39,
                            Address = "6671 Huels Creek, South Lon, Angola",
                            Birthday = new DateTime(1958, 7, 14, 11, 5, 31, 291, DateTimeKind.Utc).AddTicks(7366),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Ova37@yahoo.com",
                            FullName = "Esmeralda Witting",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "734.583.6135 x74810"
                        },
                        new
                        {
                            Id = 40,
                            Address = "639 Wilmer Knoll, North Mathias, Spain",
                            Birthday = new DateTime(2000, 8, 19, 8, 9, 25, 308, DateTimeKind.Utc).AddTicks(6741),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Herminio.Wisoky@yahoo.com",
                            FullName = "Larissa Bahringer",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(358) 594-3670 x8879"
                        },
                        new
                        {
                            Id = 41,
                            Address = "05429 Daphne Squares, East Will, Greenland",
                            Birthday = new DateTime(1972, 10, 20, 8, 5, 5, 627, DateTimeKind.Utc).AddTicks(9489),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Russel_Homenick@yahoo.com",
                            FullName = "Nolan Ledner",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "1-950-405-8629 x93098"
                        },
                        new
                        {
                            Id = 42,
                            Address = "91063 Beer Parkway, Erikashire, Ghana",
                            Birthday = new DateTime(1972, 4, 12, 23, 8, 54, 128, DateTimeKind.Utc).AddTicks(7481),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Kylie.Little17@gmail.com",
                            FullName = "Erna Brekke",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "689.703.9946 x1752"
                        },
                        new
                        {
                            Id = 43,
                            Address = "23326 Wilfred Inlet, East Hazle, Guyana",
                            Birthday = new DateTime(1998, 7, 30, 5, 15, 13, 451, DateTimeKind.Utc).AddTicks(4061),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Titus.Boehm@hotmail.com",
                            FullName = "Pete Thiel",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "670-969-8128"
                        },
                        new
                        {
                            Id = 44,
                            Address = "43257 Caesar Fall, North Reece, Martinique",
                            Birthday = new DateTime(2001, 5, 5, 2, 49, 9, 685, DateTimeKind.Utc).AddTicks(2383),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Era_Schumm@yahoo.com",
                            FullName = "Dudley Heaney",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(735) 886-2510 x8187"
                        },
                        new
                        {
                            Id = 45,
                            Address = "786 Haley Summit, Domenicland, Turkey",
                            Birthday = new DateTime(1985, 7, 15, 18, 56, 2, 278, DateTimeKind.Utc).AddTicks(3273),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Hailie_Hudson@hotmail.com",
                            FullName = "Dan Mitchell",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(453) 370-7365"
                        },
                        new
                        {
                            Id = 46,
                            Address = "738 Nitzsche Common, Willmsfurt, Svalbard & Jan Mayen Islands",
                            Birthday = new DateTime(1967, 1, 7, 17, 56, 36, 379, DateTimeKind.Utc).AddTicks(4863),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Erik63@yahoo.com",
                            FullName = "Tate Zieme",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "568-341-4820 x311"
                        },
                        new
                        {
                            Id = 47,
                            Address = "63813 Cooper Harbors, Mckaylachester, Dominica",
                            Birthday = new DateTime(1960, 2, 19, 23, 1, 18, 917, DateTimeKind.Utc).AddTicks(7694),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Berneice44@yahoo.com",
                            FullName = "Richard Glover",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "(355) 969-0757 x50322"
                        },
                        new
                        {
                            Id = 48,
                            Address = "594 Dejah Meadows, Linneaport, Lithuania",
                            Birthday = new DateTime(1991, 1, 30, 18, 20, 49, 241, DateTimeKind.Utc).AddTicks(5774),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Aletha.Homenick@gmail.com",
                            FullName = "Rocio Bins",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "866.721.5596"
                        },
                        new
                        {
                            Id = 49,
                            Address = "267 Micah Ford, New Ashtyn, United Kingdom",
                            Birthday = new DateTime(1986, 10, 22, 0, 5, 16, 168, DateTimeKind.Utc).AddTicks(931),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Dan_Hickle@yahoo.com",
                            FullName = "Estefania Yundt",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "909-336-1909 x9973"
                        },
                        new
                        {
                            Id = 50,
                            Address = "73726 Pete Club, Glendafurt, Uganda",
                            Birthday = new DateTime(1992, 9, 7, 7, 4, 46, 228, DateTimeKind.Utc).AddTicks(3834),
                            CreatedDate = new DateTime(2022, 6, 9, 10, 17, 17, 732, DateTimeKind.Utc).AddTicks(5916),
                            Email = "Garret_Baumbach@hotmail.com",
                            FullName = "Lorna Armstrong",
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "700-735-7463 x565"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6e8f12b8-6446-48ae-9e6d-0328257b8e7c",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsDel = 0,
                            LockoutEnabled = false,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEOyYwXqsaMcauYr7r7v9jcKw0ZnF5BRYA97bTIyyIAvlzMy/Zfl0CZyschSs4KvM9Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7a32e9e3-e01d-4484-9b49-64ad1526c468",
                            Status = 0,
                            TwoFactorEnabled = false,
                            Type = 0,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)");

                    b.Property<int>("BusCheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,1)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BusCheduleId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("credit");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionHis");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,1)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.Property<int>("IsDel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_date");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[user_id] IS NOT NULL");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100m,
                            CreatedDate = new DateTime(2022, 6, 9, 17, 17, 17, 682, DateTimeKind.Local).AddTicks(6596),
                            IsDel = 0,
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.TimeSchedule", "TimeSchedule")
                        .WithMany()
                        .HasForeignKey("TimeScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("TimeSchedule");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.HasOne("BusSystem.Entity.BusSchedule", "BusSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("BusCheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("BusSchedule");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Ticket", b =>
                {
                    b.HasOne("BusSystem.Entity.Order", "Order")
                        .WithOne("Ticket")
                        .HasForeignKey("BusSystem.Entity.Ticket", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BusSystem.Entity.TimeSchedule", b =>
                {
                    b.HasOne("BusSystem.Entity.Schedule", "Schedule")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusSystem.Entity.TransactionHis", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithMany("TransactionHis")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusSystem.Entity.Wallet", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("BusSystem.Entity.Wallet", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BusSystem.Entity.IdentityAccess.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusSystem.Entity.BusSchedule", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusSystem.Entity.IdentityAccess.User", b =>
                {
                    b.Navigation("TransactionHis");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("BusSystem.Entity.Order", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BusSystem.Entity.Schedule", b =>
                {
                    b.Navigation("TimeSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
